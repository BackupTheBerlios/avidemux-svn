dnl    This file is part of the KDE libraries/packages
dnl    Copyright (C) 2001 Stephan Kulow (coolo@kde.org)
dnl                       modified by Walter Tasin (tasin@kdevelop.org)
dnl                       for c++ console applications

dnl    This file is free software; you can redistribute it and/or
dnl    modify it under the terms of the GNU Library General Public
dnl    License as published by the Free Software Foundation; either
dnl    version 2 of the License, or (at your option) any later version.

dnl    This library is distributed in the hope that it will be useful,
dnl    but WITHOUT ANY WARRANTY; without even the implied warranty of
dnl    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
dnl    Library General Public License for more details.

dnl    You should have received a copy of the GNU Library General Public License
dnl    along with this library; see the file COPYING.LIB.  If not, write to
dnl    the Free Software Foundation, Inc., 59 Temple Place - Suite 330,
dnl    Boston, MA 02111-1307, USA.

# Original Author was Kalle@kde.org
# I lifted it in some mater. (Stephan Kulow)
# I used much code from Janos Farkas


AC_INIT(acinclude.m4) dnl a source file from your sub dir

dnl This is so we can use kde-common
dnl needed -- mean
AC_CONFIG_AUX_DIR(admin)

dnl This ksh/zsh feature conflicts with `cd blah ; pwd`
unset CDPATH

dnl Checking host/target/build systems, for make, install etc.
AC_CANONICAL_HOST

dnl Perform program name transformation
AC_ARG_PROGRAM
dnl Automake doc recommends to do this only here. (Janos)
AM_INIT_AUTOMAKE(avidemux,2.1.00cvs)

dnl almost the same like KDE_SET_PEFIX but the path is /usr/local
dnl
unset CDPATH
dnl make /usr/local the default for the installation
AC_PREFIX_DEFAULT(/usr/local)

dnl Ranlib
AC_PROG_RANLIB
AC_PROG_CXX
AC_PROG_LIBTOOL
dnl without this order in this file, automake will be confused!
dnl
AM_CONFIG_HEADER(config.h)


dnl create only shared libtool-libraries
AC_ENABLE_SHARED(no)

dnl set the following to yes, if you want to create static
dnl libtool-libraries, too.
AC_ENABLE_STATIC(no)

dnl create a working libtool-script
dnl KDE_PROG_LIBTOOL


dnl KDE_CHECK_EXTRA_LIBS
all_libraries="$all_libraries $USER_LDFLAGS"
all_includes="$all_includes $USER_INCLUDES"
AC_SUBST(all_includes)
AC_SUBST(all_libraries)
dnl avoid po mess
AC_SUBST(AUTODIRS)


dnl ___ added to ease install in uncommon place __

CPPFLAGS="  $USER_INCLUDES  $CPPFLAGS"
dnl __________gettext_________________
AM_GNU_GETTEXT( [external])
GETTEXT_PACKAGE=avidemux
AC_DEFINE_UNQUOTED([GETTEXT_PACKAGE], "$GETTEXT_PACKAGE",
                   [gettext package name])

LOCALEDIR=${datadir}/locale
AC_SUBST(LOCALEDIR)
AC_DEFINE_UNQUOTED([LOCALEDIR], "$LOCALEDIR",
                   [gettext locale dir])

dnl __________GTK2 Stuff____________

 AC_PATH_PROG(PKG_CONFIG, pkg-config, no)
 if test "$PKG_CONFIG" = "no" ; then
 	echo "************ pkg-config IS MANDATORY ***************"
 	AC_MSG_ERROR([*** pkg-config not found ! ***])
 fi

dnl    AC_PATH_PROG(PKG_CONFIG,pkg-config, AC_MSG_ERROR([*** pkg-config not found ! ***]))
   GTK_VERSION=`$PKG_CONFIG  gtk+-2.0 --modversion`

 if test "x$GTK_VERSION" = "x" ; then
 	echo "************ Cannot identify gtk2 version ***************"
 	AC_MSG_ERROR([*** pkg-config installed incorrectly or gtk2-dev absent ! ***])
 fi
 VEROK=`echo "$GTK_VERSION" | perl -ne '@a=split(/\./,$_);
                 if( $a[[0]] > 2 or ($a[[0]] == 2 and $a[[1]] >= 6) ){
                    print "OK";
                 }else{
                    print "FAILED";
                 }'`
 if test "x$VEROK" != "xOK" ; then
	AC_MSG_ERROR([*** need gtk+ v2.6 or greater ! ***])
 fi


   GTK_LIBS=`$PKG_CONFIG  gtk+-2.0 --libs`
   GLIB_LIBS=`$PKG_CONFIG  glib-2.0 --libs`
   GTHREAD_LIBS=`$PKG_CONFIG  gthread-2.0  --libs`

   GTK_LIBS="$GTK_LIBS $GLIB_LIBS $GTHREAD_LIBS"
   GTK_CFLAGS=`$PKG_CONFIG  gtk+-2.0 --cflags` 

   AC_SUBST(GTK_CFLAGS)
   AC_SUBST(GTK_LIBS)
   AC_SUBST(GTK_VERSION)

   
   AC_SUBST(AS)
   AC_SUBST(ASFLAGS)

dnl ______________________
dnl AC_DEFINE(USE_DIV5,0,[Divx 5])
dnl AC_DEFINE(USE_AC3,0,[A52dec])
AC_DEFINE(USE_FFMPEG,1,[FFMPEG])
dnl AC_DEFINE_UNQUOTED(ADM_LOCALEDIR, "$ADM_LOCALEDIR", [where did it go])

dnl yes we are a free country :)
dnl we force mjpeg as it is now bundled
AC_DEFINE(USE_MJPEG,1,[MJPEG])
AC_DEFINE(AMR_NB,1,[AMR_NB])
dnl AC_DEFINE(USE_MP3,0,[libmad])
dnl AC_DEFINE(USE_MPEG,0,[libmpeg3])
dnl AC_DEFINE(OSS_SUPPORT,0,[OSS])
dnl AC_DEFINE(USE_XVID,0,[XVID_AS_DIVX])
dnl AC_DEFINE(USE_SDL,0,[XVID_AS_DIVX])
dnl AC_DEFINE(USE_XX_XVID,0,[XVID_AS_XVID])
dnl AC_DEFINE(USE_DIVX,0,[DIVX is present])
dnl ___________________________________

dnl ____________________________________
have_mad=yes
have_divxdecore=yes
have_divxencore=yes
have_alsa=yes
have_xvid=yes
have_mjpeg=yes
have_lmpeg3=yes
have_lmpeg2=yes
have_divx=yes
have_little_endian=yes
have_vorbis=yes
have_ac3=yes
have_xx_xvid=yes
have_xx_xvid_cvs=yes
have_xvid4=yes
have_ff=yes
have_xml2=yes
have_bsd=no
have_nasm=no
have_altivec=no
have_malloc=no
have_darwin=no
have_amd64=no
have_ppc=no
have_x264=yes

dnl _________________ malloc.h ___________________

AC_CHECK_HEADERS(malloc.h,have_malloc_h=yes)
AC_CHECK_HEADERS(malloc/malloc.h,have_malloc_h=yes)
if test "x$have_malloc_h" = "xyes"; then
	CPPFLAGS="$CPPFLAGS -I/usr/include/malloc"
	AC_DEFINE(HAVE_MALLOC_H,1,[have malloc.h])
	
fi

dnl ______________ libxml2 _____________
AC_PATH_PROG(XML_CONFIG, xml2-config, no)
 if test "XML_CONFIG" = "no" ; then
	   	XML_LIBS=""
    		XML_CFLAGS=""
      		have_xml2=no
	else

 		XML_CFLAGS=`$XML_CONFIG  --cflags`
 		XML_LIBS=`$XML_CONFIG  --libs`
    old_flags=$CPPFLAGS
    CPPFLAGS="$CPPFLAGS $XML_CFLAGS"
    AC_CHECK_HEADERS(libxml/parser.h,,have_xml2=no)
    if test "x$have_xml2" = "xno"; then
    	AC_MSG_WARN(no parser.h valid header found for xml2)
    fi
 fi
if test "x$have_xml2" = "xyes"; then
AC_DEFINE(USE_LIBXML2,1,[LibXML2 is available])
fi


dnl __________________divx______________
dnl __________________x264 ______________
AC_MSG_CHECKING(for x264 codec )
AC_CHECK_HEADER(x264.h,,have_x264=no)
if test "x$have_x264" = "xyes"; then
   AC_CHECK_LIB(x264,x264_encoder_open,,have_x264=no,-lm)
fi
if test "x$have_x264" = "xyes"; then
	AC_DEFINE(USE_X264,1,[use x264 encoder])
fi

dnl __________________xvid 0.9 ______________
AC_MSG_CHECKING(for xvid codec 0.9)
AC_CHECK_HEADER(xvid.h,,have_xx_xvid=no)

dnl -- check API version 2.1 and not 2.0--

cat >> conftest.$ac_ext <<EOF
#include "xvid.h"
int main()
{
	#if  API_VERSION != ((2<<16)+1)
	#error Xvid Api Not 2.1
	#endif
return 1;
}
EOF

 ac_compile='${CXX} -c $CXXFLAGS $all_includes $CPPFLAGS conftest.$ac_ext > /dev/null'
 if AC_TRY_EVAL(ac_compile); then
   have_xx_xvid=yes
   AC_CHECK_LIB(xvidcore,xvid_encore,,have_xx_xvid=no,-lm)
 else
   have_xx_xvid=no
fi
dnl config.h 
 if test "x$have_xx_xvid" = "xyes"; then
 	AC_DEFINE(USE_XX_XVID,1,[use xvid api])
 fi
dnl __________________libpng  ______________
AC_MSG_CHECKING(for libpng )
have_png=yes
AC_CHECK_HEADER(png.h,,have_png=no)
AC_CHECK_LIB(png,png_malloc,,have_png=no)
 
if test "x$have_png" = "xyes"; then
	AC_DEFINE(USE_PNG,1,[Png is available])
fi
dnl __________________xvid 1.0 ______________
AC_MSG_CHECKING(for xvid codec 1.0)
AC_CHECK_HEADER(xvid.h,,have_xvid4=no)

dnl -- check API version 4.0
AC_TRY_COMPILE([
  	#include "xvid.h"
	#if ( XVID_API == ((4<<16)+0)) || ( XVID_API == ((4<<16)+1))
	#error Xvid Api is 4.0 :)
	#endif

],
int z=0
,[
  have_xvid4=no
])

AC_CHECK_LIB(xvidcore,xvid_encore,,have_xvid4=no,-lm)
 
if test "x$have_xvid4" = "xyes"; then
 	
	AC_CHECK_LIB(xvidcore,xvid_encore,,have_xvid4=no,-lm)
	if test "x$have_xvid4" = "xyes"; then
		AC_DEFINE(USE_XVID_4,1,[use xvid api 1.0 beta])
	fi
 fi

dnl __________________FFMPEG______________

dnl __________________/FFMPEG______________
dnl __________________OS dep stuff_____________

dnl __________________Lrintf_____________

have_lrintf=no
AC_MSG_CHECKING(for lrintf in math.h)
AC_TRY_COMPILE([
  #include <math.h>
],[
  int arg = 0;
	arg=lrintf(0.5);
],[
  have_lrintf=yes
])
if test x$have_lrintf = xyes ; then
  AC_DEFINE(HAVE_LRINTF,1,[roundup function])
fi
AC_MSG_RESULT($have_lrintf)
dnl __________________fast int_____________

have_fastint=no
AC_MSG_CHECKING(for fastint)
AC_TRY_COMPILE([
  #include <stdio.h>
  #include <stdint.h>
],[
  int arg = 0;
  int_fast16_t fst=0;
],[
  have_fastint=yes
])
if test x$have_fastint = xno ; then
  AC_DEFINE(EMULATE_FAST_INT,1,[roundup function])
fi
AC_MSG_RESULT($have_lrintf)

dnl ____________________iconv need const ?___________________
have_consticonv=yes
AC_MSG_CHECKING(iconv needs const)
AC_TRY_COMPILE([
  #include <stdio.h>
  #include <stdlib.h>
  #include <iconv.h>
],[
char *in,*out;
size_t sin,sout,sz;
iconv_t _conv;		
	sin=1;
	sout=4;
 	sz=iconv(_conv,&in,&sin,&out,&sout);  


],[
  have_consticonv=no
])
if test x$have_consticonv = xyes ; then
  AC_DEFINE(ICONV_NEED_CONST,1,[Stricter prototyping])
fi
AC_MSG_RESULT($have_consticonv)


dnl __________________/OS dep stuff______________


dnl
dnl Open Sound System support
dnl
AC_ARG_WITH([oss],
	AC_HELP_STRING([--without-oss], [Force compilation without OSS (default: test)]),
	[with_oss=${withval}], [with_oss=test])

AC_MSG_CHECKING([if OSS support is requested])
AC_MSG_RESULT($with_oss)

have_oss=no

if test "x$with_oss" != "xno"; then
	AC_MSG_CHECKING(for OSS audio support)
	AC_TRY_COMPILE([
		#ifdef __NetBSD__
		#include <sys/ioccom.h>
		#include <soundcard.h>
		#else
		#include <sys/soundcard.h>
		#endif
	],[
		int arg = SNDCTL_DSP_SETFRAGMENT;
	],[
		have_oss=yes
	])
	AC_MSG_RESULT($have_oss)

	if test "x$have_oss" = "xyes"; then
		AC_DEFINE(OSS_SUPPORT,1,[OSS detected])
	fi
fi

dnl __________________ALSA______________
AC_MSG_CHECKING(for ALSA audio support)
AC_CHECK_HEADERS(alsa/asoundlib.h,,have_alsa=no)
dnl check version 0.9.x
if test "x$have_alsa" = "xyes"; then
have_alsa=no
AC_TRY_COMPILE([
#include <alsa/asoundlib.h>
],
[
#if SND_LIB_MAJOR!=0 || SND_LIB_MINOR!=9
#error Not alsa 0.9!
#endif
int arg = 0;
],[
have_alsa=yes
have_alsa_1=no
])
dnl __ if it fails, try alsa 1.0 ___
if test "x$have_alsa" = "xno"; then
AC_TRY_COMPILE([
#include <alsa/asoundlib.h>
],
[
#if SND_LIB_MAJOR!=1 || SND_LIB_MINOR!=0
#error Not alsa 1.0!
#endif
int arg = 0;
],[
have_alsa=yes
have_alsa_1=yes
])
fi
AC_CHECK_LIB(asound,snd_pcm_hw_params_set_channels,,have_alsa=no,-lm)
fi
if test "x$have_alsa" = "xyes"; then				
	AC_DEFINE(ALSA_SUPPORT,1,"[Use alsa as possible audio device]")
fi
if test "x$have_alsa_1" = "xyes"; then				
	AC_DEFINE(ALSA_1_0_SUPPORT,1,"[Alsa is 1.0]")
fi

dnl __________________/ALSA______________



dnl
dnl aRTs daemon support
dnl
AC_ARG_WITH([arts],
	AC_HELP_STRING([--without-arts], [Force compilation without aRTs (default: test)]),
	[with_arts=${withval}], [with_arts=test])

AC_MSG_CHECKING([if aRTs support is required])
AC_MSG_RESULT($with_arts)

have_arts=no
ARTS_CFLAGS=
ARTS_LIBS=

if test "x$with_arts" != "xno"; then
	AC_PATH_PROG(ART_CONFIG, artsc-config, no)
	if test "x$ART_CONFIG" != "xno"; then
		have_arts=yes

		ARTS_CFLAGS=$($ART_CONFIG --cflags)
		ARTS_LIBS=$($ART_CONFIG --libs)

		old_cppflags=$CPPFLAGS
		old_cflags=$CFLAGS

		CPPFLAGS="$CPPFLAGS $ARTS_CFLAGS"
		CFLAGS="$CFLAGS $ARTS_CFLAGS"

		AC_CHECK_HEADERS([artsc.h], , [have_arts=no])

		CPPFLAGS=$old_cppflags
		CFLAGS=$old_cflags
	fi

	if test "x$have_arts" = "xyes"; then
		AC_DEFINE(USE_ARTS, 1, "[Arts]")
	elif test "x$with_arts" = "xyes"; then
		AC_MSG_ERROR([aRTs support requested but not found.])
	fi
fi
AC_SUBST(ARTS_CFLAGS)
AC_SUBST(ARTS_LIBS)

dnl __________________mad______________
AC_CHECK_HEADERS(mad.h,,have_mad=no)
if test "x$have_mad" = "xyes"; then
		AC_CHECK_LIB(mad,mad_decoder_run,,have_mad=no, -lm)
fi

AC_ARG_ENABLE(mad,[  --enable-mad           Force mad],have_mad=yes)
dnl AC_ARG_ENABLE(mad,[  --disable-mad          Force no mad],have_mad=0)

if test "x$have_mad" = "xyes"; then
	AC_DEFINE(USE_MP3,1,[libmad])
fi
 AC_MSG_CHECKING(mad library) 
 AC_MSG_RESULT($have_mad)
dnl __________________/mad______________
 dnl
 dnl FAAD support
 dnl
 AC_ARG_WITH([faad2],
 	AC_HELP_STRING([--without-faad2], [Force compilation without FAAD2 (default: test)]),
 	[with_faad2=${withval}], [with_faad2=test])
 AC_ARG_WITH([newfaad],
 	AC_HELP_STRING([--with-newfaad], [Use Gentoo hacked faad2.h]),
 	[newfaad=${withval}], [newfaad=no])
 
 AC_MSG_CHECKING([if FAAD2 support is required])
 AC_MSG_RESULT($with_faad2)
 
 have_faad=no
 
 if test "x$with_faad2" != "xno"; then
 	have_faad=yes
 
 	AC_CHECK_HEADERS([faad.h], , have_faad=no)
 	AC_CHECK_LIB( faad, faacDecInit, , have_faad=no )
 
 	if test "x$have_faad" = "xyes"; then
 		AC_DEFINE(USE_FAAD, 1, [Use faad audio decoder])
 	elif test "x$with_faad2" = "xyes"; then
 		AC_MSG_ERROR([FAAD2 support requested but not found.])
 	fi
 
 	if test "x$newfaad" = "xno"; then
 		AC_DEFINE(OLD_FAAD_PROTO, 1, [Use classing FAAD support])
 	fi
 fi
 

dnl ____________ faac ?________________
have_faac=yes
 AC_CHECK_HEADERS(faac.h,,have_faac=no)
 
 AC_ARG_ENABLE(faac,[  --disable-faac           Force no faac],have_faac=no)
   
    if test "x$have_faac" = "xyes"; then
		AC_CHECK_LIB( faac,faacEncClose,,have_faac=no, -lm )
		if test "x$have_faac" = "xyes"; then
	  		AC_DEFINE(USE_FAAC,1,"[Use faac audio enccoder]")
		fi  
    fi     
 AC_MSG_CHECKING(faac library) 
 AC_MSG_RESULT($have_faac)
  
dnl _______________/faac_______________
dnl _________________ /freetype 2 _________________
dnl __________________ac3______________
 dnl
 dnl a52dec decoding library
 dnl
 AC_ARG_WITH([a52dec],
 	AC_HELP_STRING([--without-a52dec], [Force compilation without a52dec (default: test)]),
 	[with_a52dec=${withval}], [with_a52dec=test])
 
 AC_MSG_CHECKING([if a52dec support is required])
 AC_MSG_RESULT($with_a52dec)
 
 have_ac3=yes
 
 if test "x$with_a52dec" != "xno"; then
 	AC_CHECK_HEADERS([a52dec/a52.h], , have_ac3=no)
 	AC_CHECK_LIB( a52, a52_init, , have_ac3=no, -lm )
 
 	if test "x$have_faac" = "xyes"; then
 		AC_DEFINE(USE_AC3,1,[liba52dec])
 	elif test "x$with_faad2" = "xyes"; then
 		AC_MSG_ERROR([a52dec support requested but not found.])
 	fi
  fi
dnl __________________/ac3______________
dnl __________________VORBIS______________
AC_CHECK_LIB(vorbis,vorbis_info_init,,have_vorbis=no, -lm)
if test "x$have_vorbis" = "xyes"; then
	AC_CHECK_LIB(vorbisenc,vorbis_encode_init,,have_vorbis=no, -lm)
	if test "x$have_vorbis" = "xyes"; then
		AC_DEFINE(USE_VORBIS,1,[Vorbis audio codec])
	fi
fi
dnl __________________/VORBIS______________

dnl __________________LAME______________
 AC_ARG_WITH([lame],
 	AC_HELP_STRING([--without-lame], [Force compilation without LAME (default: test)]),
 	[with_lame=${withval}], [with_lame=test])
 
 AC_MSG_CHECKING([if LAME support is required])
 AC_MSG_RESULT($with_lame)
 
 have_lame=no
 
 if test "x$with_lame" != "xno"; then
 	have_lame=yes
 	AC_CHECK_HEADERS(lame/lame.h, , have_lame=no)
 	AC_CHECK_LIB(mp3lame, lame_init, , have_lame=no, -lm)
 
 	if test "x$with_lame" = "xyes" && test "x$have_lame" = "xno"; then
 		AC_MSG_ERROR([LAME support requested but not found.])
 	fi
 fi
 
 

dnl __________________/mad______________
dnl __________________MJPEG______________
dnl AC_CHECK_HEADERS(mjpegtools/jpegutils.h,,have_mjpeg=no)
dnl if test "x$have_mjpeg" = "xyes"; then
dnl AC_CHECK_LIB( mjpegutils,mpeg_framerate_code_definition,,have_mjpeg=no, -lm )
dnl fi
dnl if test "x$have_mjpeg" = "xyes"; then
dnl AC_CHECK_LIB( lavjpeg,decode_jpeg_raw,,have_mjpeg=no, -lm -lmjpegutils)
dnl fi
dnl if test "x$have_mjpeg" = "xyes"; then
dnl AC_DEFINE(USE_MJPEG,1,[Mjpeg lib])
dnl fi
dnl __________________/MJEG______________


dnl
dnl FreeType2 font rendering support
dnl
AC_ARG_WITH([freetype2],
	AC_HELP_STRING([--without-freetype2], [Force compilation without FreeType2 (default: test)]),
	[with_freetype2=${withval}], [with_freetype2=test])

AC_MSG_CHECKING([if FreeType2 support is required])
AC_MSG_RESULT($with_freetype2)

have_freetype=no

if test "x$with_freetype2" != "xno"; then
	PKG_CHECK_MODULES(FREETYPE, freetype2, have_freetype=yes, [
			if test "x$with_freetype2" = "xyes"; then
				AC_MSG_ERROR([FreeType2 support requested but not found.])
			fi
		])

	if test "x$have_freetype" = "xyes"; then
		AC_DEFINE(USE_FREETYPE,1,"[Use FreeType2 font rendering]")
	fi
fi

AC_SUBST(FREETYPE_CFLAGS)
AC_SUBST(FREETYPE_LIBS)

AC_MSG_CHECKING(/usr/local/ is full of divx)
AC_MSG_RESULT("yes")

dnl __________________________________________

use_debug=0

dnl debug

AC_ARG_WITH(debug, [  debug flag],
  [
	   use_debug=1

  ]
)

CXXFLAGS="   -I.. -IADM_library -I../ADM_library  -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 $CXXFLAGS"
CFLAGS=" $CFLAGS"

dnl ___________________profiling _______________________

use_profile=0

dnl debug

AC_ARG_WITH(profile, [  profile flag],
  [
	   use_profile=1

  ]
)
if test "x$use_profile" = "x1"; then
CXXFLAGS="$CXXFLAGS -pg "
CFLAGS="$CFLAGS -pg "
LDFLAGS="$LDFLAGS -pg "
fi
dnl ____________________ Cygwin / mingwin ? ___________
use_cygwin=no
AC_MSG_CHECKING(win32 host)


AC_TRY_COMPILE([
	#if !defined(__CYGWIN__) &&!defined(__MINGW32__)
		#error
	#endif

],
int z=0
,[
  use_cygwin=yes
])

AC_MSG_RESULT($use_cygwin)

dnl __________________SPIDERMONKEY ______________
have_sm=yes
SMONKEY_CFLAGS=""
AC_MSG_CHECKING(spidermonkey engine )
 AC_ARG_WITH(jsapi-include,
    [    --with-jsapi-include=PATH       path to jsapi.h],[],[])
  if test "${with_jsapi_include}" != "no" -a -n "${with_jsapi_include}"
  then
    SMONKEY_CFLAGS="-I${with_jsapi_include}"
    if test "x$use_cygwin" = "xyes"; then
	SMONKEY_CFLAGS="$SMONKEY_CFLAGS -DXP_WIN"
    else
	SMONKEY_CFLAGS="$SMONKEY_CFLAGS -DXP_UNIX"
    fi
  fi
 echo "using : $SMONKEY_CFLAGS : as extra flags"

 old_flags=$CPPFLAGS

CPPFLAGS="$CPPFLAGS $SMONKEY_CFLAGS"
AC_CHECK_HEADER(jsapi.h,,have_sm=no)
if test "x$have_sm" = "xyes"; then
   AC_CHECK_LIB(js,JS_Init,,have_sm=no,-lm)
   if test "x$have_sm" = "xno"; then
	have_sm="yes"
     	AC_CHECK_LIB(smjs,JS_Init,,have_sm=no,-lm)
        if test "x$have_sm" = "xno"; then
             dnl fedora core 3 - firefox/thunderbird/mozilla have this lib
             have_sm="yes"
             AC_CHECK_LIB(mozjs,JS_Init,,have_sm=no,)
        fi
   fi
fi
if test "x$have_sm" = "xno"; then
	AC_MSG_ERROR([*** SPIDERMONKEY javascript engine not found !***])
fi
CPPFLAGS=$old_flags
dnl ________/SPIDERMONKEY__________



dnl
dnl xv output support
dnl
AC_ARG_ENABLE([xv],
	AC_HELP_STRING([--disable-xv], [Force compilation without XV support. (default: test)]),
	[enable_xv=${enableval}], [enable_xv=test])

have_xv=no

if test "x$enable_xv" != "xno"; then
	have_xv=yes

	AC_CHECK_HEADERS([sys/shm.h X11/extensions/XShm.h X11/extensions/Xvlib.h], , have_xv=no,
		[
			#include <stdio.h>
			#include <X11/Intrinsic.h>
		])
	AC_CHECK_LIB(Xv, XvShmPutImage, , have_xv=no, -L/usr/X11R6/lib -lXext -lX11 -lm)

	if test "x$have_xv" = "xyes"; then
		AC_DEFINE(USE_XV,1,[Try to use Xv extension])
	elif test "x$enable_xv" = "xyes"; then
		AC_MSG_ERROR([XV support requested but not found.])
	fi
fi

dnl
dnl SDL
dnl
AC_ARG_WITH([libsdl],
	AC_HELP_STRING([--without-libsdl], [Force compilation without SDL (default: test)]),
	[with_sdl=${withval}], [with_sdl=test])

AC_MSG_CHECKING([if SDL support is required])
AC_MSG_RESULT($with_sdl)

have_sdl=no
SDL_CFLAGS=
SDL_LIBS=

dnl if test "x$with_sdl" != "xno"; then
dnl 	AM_PATH_SDL(, [
dnl			have_sdl=yes
dnl			AC_DEFINE(USE_SDL,1,[Use SDL ])
dnl		], [
dnl			if test "x$with_sdl" = "xyes"; then
dnl				AC_MSG_ERROR([SDL support requested but not found.])
dnl			fi
dnl		])
dnl fi

if test "x$with_sdl" != "xno"; then
AC_PATH_PROG(SDL_CONFIG, sdl-config, "no")
 if test "$SDL_CONFIG" = "no" ; then
                SDL_LIBS=""
                SDL_CFLAGS=""
                have_sdl=no
        else

                SDL_CFLAGS=`$SDL_CONFIG  --cflags`
                SDL_LIBS=`$SDL_CONFIG  --libs`                  
                CPPFLAGS="$CPPFLAGS $SDL_CFLAGS"
                have_sdl=yes
 fi
if test "x$have_sdl" = "xyes" ;  then
        AC_DEFINE(USE_SDL,1,[Use SDL ])
fi
fi

AC_SUBST(SDL_CFLAGS)
AC_SUBST(SDL_LIBS)


dnl ____________________ CPU____________________________
echo "Checking cpu/system type"

echo "CPU type : $host_cpu"
use_mmx=0
case $host_cpu in
	i386|i486|i586|i686)
		
		have_little_endian=yes;		
		AC_DEFINE(ARCH_X86,1,[post proc])		
                AC_DEFINE(HAVE_MMX,1,[post proc])       
		AC_DEFINE(RUNTIME_CPUDETECT,1,"Let ffmpeg decide which is faster")		
                use_mmx=1
		echo "X86 is ON"
		;;
	x86_64|amd64)
		have_little_endian=yes;		
                AC_DEFINE(ARCH_X86_64,1,"X86_64 amd64 assembly")
                AC_DEFINE(HAVE_MMX,1,[post proc])       
		AC_DEFINE(RUNTIME_CPUDETECT,1,"Let ffmpeg decide which is faster")
                use_mmx=1
		have_amd64=yes                
		echo "ADM64";;
	sparc|sparc64)
		have_little_endian=no;
		LMPG_OPT="";			
		AC_DEFINE(ADM_BIG_ENDIAN,1,[Big endian cpu  sparc or powerpc])		
		AC_DEFINE(WORDS_BIGENDIAN,1,[Big endian cpu  sparc or powerpc]);;
		
	sun4u)
		LDFLAGS="$LDFLAGS -lposix4";
		have_little_endian=no;
		LMPG_OPT="";		
		AC_DEFINE(ADM_SPARC,1,[Sparc workstations])
		AC_DEFINE(ADM_BIG_ENDIAN,1,[Big endian cpu  sparc or powerpc])		
		AC_DEFINE(WORDS_BIGENDIAN,1,[Big endian cpu  sparc or powerpc]);;
	ppc)
		have_little_endian=no;
		LMPG_OPT="";
		have_ppc=yes				
		dnl we assume to be on linux-ish system here
		AC_DEFINE(restrict,__restrict__,[roundup function])
		AC_DEFINE(ADM_BIG_ENDIAN,1,[Big endian cpu  sparc or powerpc])
		AC_DEFINE(ARCH_POWERPC,1,[Enable powerpc optim])		
		AC_ARG_ENABLE(altivec,[  --enable-altivec           enable  altivec acceleration(ppc)],have_altivec=yes)
		AC_DEFINE(WORDS_BIGENDIAN,1,[Big endian cpu  sparc or powerpc]);;

	*)
		adm_cpu=`uname -p`;
		case $adm_cpu in
			powerpc)
			echo "Power Macintosh (darwin ??)"
			have_darwin=yes
			have_little_endian=no
  			AC_DEFINE(ADM_BSD_FAMILY,1,[BSD os specific ifdef])
			LMPG_OPT="";
			LDFLAGS="$LDFLAGS  \
				-framework CoreServices \
				-framework CoreAudio  \
				-framework AudioUnit"  
			
			AC_DEFINE(ADM_BIG_ENDIAN,1,[Big endian cpu  sparc or powerpc])
			AC_DEFINE(CONFIG_DARWIN,0,[Say to ffmpeg we are using darwin macOsX])
			AC_DEFINE(WORDS_BIGENDIAN,1,[Big endian cpu  sparc or powerpc])
			AC_ARG_ENABLE(altivec,[  --enable-altivec           enable  altivec acceleration(ppc)],have_altivec=yes)
			AC_DEFINE(ARCH_POWERPC,1,[Enable powerpc optim])
			have_ppc=yes;;
			*)
			have_little_endian=no;
			LMPG_OPT="";
			
			AC_DEFINE(ADM_BIG_ENDIAN,1,[Big endian cpu  sparc or powerpc])
			AC_DEFINE(WORDS_BIGENDIAN,1,[Big endian cpu  sparc or powerpc]);;
		esac
esac
ALTIVEC_SWITCH=''
AC_MSG_CHECKING(for Altivec )
AC_MSG_RESULT($have_altivec)
if test "x$have_altivec" = "xyes"; then
		echo "Altivec enabled";
		
		AC_DEFINE(HAVE_ALTIVEC,1,[Enable altivec by default])
		if test "x$have_darwin" = "xno"; then
			AC_DEFINE(HAVE_ALTIVEC_H,1,[Enable altivec by default])
			ALTIVEC_SWITCH='-mabi=altivec -maltivec'
			
		else
			dnl we are using macOsX, deal with how they do stuff
			ALTIVEC_SWITCH='-mabi=altivec -maltivec -faltivec -force_cpusubtype_ALL'
		fi
		CFLAGS="$CFLAGS $ALTIVEC_SWITCH"
		CXXFLAGS="$CXXFLAGS $ALTIVEC_SWITCH"
		AC_DEFINE(ARCH_PPC,1,[Altivec for libmpeg2])
		dnl AC_DEFINE(USE_ALTIVEC,1,[Altivec for mpeg2enc]) 

fi
echo "cpu done"
dnl ____________________ /CPU____________________________

if test "x$use_cygwin" = "xyes"; then
	AC_DEFINE(MEMALIGN_HACK,1,"sse on cywin")
	AC_DEFINE(CYG_MANGLING,1,"Name mangling")
	AC_DEFINE(rindex,ADM_rindex,"rindex does not exist on cygwin")
	AC_DEFINE(index,ADM_index,"rindex does not exist on cygwin")
	AC_DEFINE(fseeko,fseeko_adm,"")
	AC_DEFINE(ftello,ftello_adm,"")
	#AC_DEFINE(link(x,y),-1,"")	
	CXXFLAGS=" $CXXFLAGS -mno-cygwin -mms-bitfields"
	CFLAGS=" $CFLAGS -mno-cygwin -mms-bitfields"
	
fi

dnl ______________ vectors ? for altivec mainly and a bit of 386 (fft) _______
dnl (except for amd64 ? bug in ubuntu ?)
if test "x$have_amd64" = "xno"; then
use_builtin=no
AC_MSG_CHECKING(Built in vectors)


AC_TRY_COMPILE([
	
#if __GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 2)
#else
#error no vector builtins
#endif
],
int z=0
,[
  use_builtin=yes
])

AC_MSG_RESULT(use_builtin)
if test "x$use_builtin" = "xyes"; then
	AC_DEFINE(HAVE_BUILTIN_VECTOR,1,[Enable altivec by default])
fi 
fi
dnl __________ conditional ___________________

AM_CONDITIONAL(BUILD_MMX_COMPATIBLE, test "x$use_mmx" = "x1" || test "x$have_amd64" = "xyes")

AM_CONDITIONAL(BUILD_DARWIN, test "x$have_darwin" = "xyes")
AM_CONDITIONAL(BUILD_PPC, test "x$have_ppc" = "xyes")
AM_CONDITIONAL(BUILD_ALTIVEC, test "x$have_altivec" = "xyes")
AM_CONDITIONAL(BUILD_A64, test "x$have_amd64" = "xyes")
dnl ____________________BSD famiy patch____________________________
AC_TRY_COMPILE([
  	#include <stdlib.h>

	#if !defined (__FreeBSD__) && !defined(__NetBSD__) && !defined(__OpenBSD__) && !defined(__APPLE__)
		#error
	#endif

],
int z=0
,[
  	AC_DEFINE(ADM_BSD_FAMILY,1,[BSD os specific ifdef])
	have_bsd=yes;
	echo "BSD type OS"
])


dnl ____________________ /BSD____________________________

dnl _________debug and optims________________
dnl __ builtin means gcc3, for gcc 2 we stick to -O2 ___
if test "x$use_debug" = "x1"; then
	AC_DEFINE(ADM_DEBUG,1,[be verbose])
	CXXFLAGS="$CXXFLAGS -O1 -g3"
	CFLAGS="$CFLAGS -O1 -g3"
	
else
	if test "x$use_builtin" = "x1"; then
		CXXFLAGS="$CXXFLAGS -O3"
		CFLAGS="$CFLAGS -O3"
	else
		CXXFLAGS="$CXXFLAGS -O2"
		CFLAGS="$CFLAGS -O2"
	fi
fi
CFLAGS="$CFLAGS -falign-loops=16"
CXXFLAGS="$CXXFLAGS -falign-loops=16"
dnl ___________________lavcodec _________________________

AC_DEFINE(CONFIG_RISKY,1,[FFMPEG])
AC_DEFINE(CONFIG_ENCODERS,1,[FFMPEG])
AC_DEFINE(CONFIG_DECODERS,1,[FFMPEG])
AC_DEFINE(CONFIG_MPEGAUDIO_HP,1,[FFMPEG])
AC_DEFINE(AMR_NB,1,[AMR_NB])
dnl bunch of new stuff
AC_DEFINE(CONFIG_AC3_ENCODER,1,[CONFIG_AC3_ENCODER])
AC_DEFINE(CONFIG_MP2_ENCODER,1,[CONFIG_MP2_ENCODER])
AC_DEFINE(CONFIG_MPEG1VIDEO_ENCODER,1,[CONFIG_MPEG1VIDEO_ENCODER])
AC_DEFINE(CONFIG_MPEG2VIDEO_ENCODER,1,[CONFIG_MPEG2VIDEO_ENCODER])
AC_DEFINE(CONFIG_H263_ENCODER,1,[CONFIG_H263_ENCODER])
AC_DEFINE(CONFIG_H263P_ENCODER,1,[CONFIG_H263P_ENCODER])
AC_DEFINE(CONFIG_MPEG4_ENCODER,1,[CONFIG_MPEG4_ENCODER])
AC_DEFINE(CONFIG_MSMPEG4V3_ENCODER,1,[CONFIG_MSMPEG4V3_ENCODER])
AC_DEFINE(CONFIG_MJPEG_ENCODER,1,[CONFIG_MJPEG_ENCODER])
AC_DEFINE(CONFIG_HUFFYUV_ENCODER,1,[CONFIG_HUFFYUV_ENCODER])
AC_DEFINE(CONFIG_FFVHUFF_ENCODER,1,[CONFIG_FFVHUFF_ENCODER])
AC_DEFINE(CONFIG_FFV1_ENCODER,1,[CONFIG_FFV1_ENCODER])
dnl decoders

AC_DEFINE(CONFIG_MPEG1VIDEO_DECODER,1,[CONFIG_MPEG1VIDEO_ENCODER])
AC_DEFINE(CONFIG_MPEG2VIDEO_DECODER,1,[CONFIG_MPEG2VIDEO_ENCODER])
AC_DEFINE(CONFIG_H263_DECODER,1,[CONFIG_H263_ENCODER])
AC_DEFINE(CONFIG_H263P_DECODER,1,[CONFIG_H263P_ENCODER])
AC_DEFINE(CONFIG_H264_DECODER,1,[CONFIG_H263P_ENCODER])
AC_DEFINE(CONFIG_MPEG4_DECODER,1,[CONFIG_MPEG4_ENCODER])
AC_DEFINE(CONFIG_MSMPEG4V3_DECODER,1,[CONFIG_MSMPEG4V3_ENCODER])
AC_DEFINE(CONFIG_MSMPEG4V2_DECODER,1,[CONFIG_MSMPEG4V3_ENCODER])
AC_DEFINE(CONFIG_MJPEG_DECODER,1,[CONFIG_MJPEG_ENCODER])
AC_DEFINE(CONFIG_HUFFYUV_DECODER,1,[CONFIG_HUFFYUV_ENCODER])
AC_DEFINE(CONFIG_FFVHUFF_DECODER,1,[CONFIG_FFVHUFF_ENCODER])
AC_DEFINE(CONFIG_FFV1_DECODER,1,[CONFIG_FFV1_ENCODER])
AC_DEFINE(CONFIG_CYUV_DECODER,1,[CONFIG_FFV1_ENCODER])
AC_DEFINE(CONFIG_SVQ3_DECODER,1,[CONFIG_FFV1_ENCODER])
AC_DEFINE(CONFIG_WMAV2_DECODER,1,[CONFIG_FFV1_ENCODER])
AC_DEFINE(CONFIG_DVVIDEO_DECODER,1,[CONFIG_FFV1_ENCODER])
AC_DEFINE(CONFIG_WMV2_DECODER,1,[CONFIG_FFV1_ENCODER])
d
dnl _________mpeg2dec_______________
AC_DEFINE(ACCEL_DETECT,1,[MPEG2DEC])

dnl ______________________________________________________
  AC_SUBST(LMPG_OPT)
  AC_SUBST(ALTIVEC_SWITCH)

  AC_SUBST(XML_CFLAGS)
  AC_SUBST(XML_LIBS)
  


  AC_SUBST(SMONKEY_CFLAGS)

dnl **   mean   ***
echo " GTK+ version        : $GTK_VERSION"
echo " Divx5.0.5 ?         : $have_divx"
echo " *** DISABLED ***"
echo " Xvid 0.9 Codec      : $have_xx_xvid"
echo " Xvid 1.0 Codec      : $have_xvid4"
echo " x264 encoder c      : $have_x264"
echo " Mad decoder         : $have_mad"
echo " OSS                 : $have_oss"
echo " ALSA                : $have_alsa"
echo " SDL                 : $have_sdl"
echo " Xvideo              : $have_xv"
echo " Lame                : $have_lame"
echo " Ogg Vorbis          : $have_vorbis"
echo " Faad2(decoder)      : $have_faad"
echo " Faac (encoder)      : $have_faac"
echo " A52/AC3             : $have_ac3"
echo " FFMPEG              : $have_ff"
echo " aRTs                : $have_arts"
echo " FreeType            : $have_freetype"
echo " XML2                : $have_xml2"
echo " locale              : $ADM_LOCALEDIR"
echo " Little endian cpu   : $have_little_endian"
echo " AMD64               : $have_amd64"
echo " Altivec             : $have_altivec"
echo " PPC                 : $have_ppc"
echo " X86                 : $use_mmx"
echo " MacOsX(Darwin)      : $have_darwin"
echo " Cygwin              : $use_cygwin"
echo " Gcc supports vectors: $use_builtin"
 if test "x$have_xml2" = "xno"; then
 	echo "************ LIBXML2 IS MANDATORY ***************"
 	echo "************ get it from http://www.xmlsoft.org*********"
	AC_MSG_ERROR([*** No xml2 found***])
fi
dnl _______________________________________________________
dnl autogen prefs..
dnl _______________________________________________________
cd avidemux/
if test ../admin/prefs_gen.pl -nt prefs.in; then
	touch prefs.in
fi
if test prefs.in -nt prefs.h -o prefs.in -nt prefs.cpp; then
	echo "Regeneration preferences definitions"
	perl ../admin/prefs_gen.pl
fi
cd ..

