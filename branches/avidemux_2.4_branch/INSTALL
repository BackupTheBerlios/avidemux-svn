Building Avidemux
=================

Avidemux uses CMake (www.cmake.org) to manage its build process.  CMake is a 
cross-platform, open-source build system that generates native makefiles and 
workspaces for the compiler environment of your choice.

This document explains briefly how to build Avidemux with CMake:

-	Change to the top-level directory containing the Avidemux sources:
        cd avidemux_src
-	Create a directory, e.g. "build", and change into it:
        mkdir build
        cd build
-	Use CMake to generate makefiles:
        cmake ..
-	Build Avidemux and install it:
        make
        make install

Avidemux is installed to the directory relative to the installation prefix, 
which can be set by adding the following flag to the cmake command:
    -DCMAKE_INSTALL_PREFIX=<dir>

By default a release build is created.  To perform a debug build, add the 
following flag to the cmake command:
    –DCMAKE_BUILD_TYPE=Debug

The default makefile generator may need to be overridden on some systems.  To 
do so, add one of the following flags to the cmake command:
    For MSYS:
        -G"MSYS Makefiles"

    For MinGW:
        -G"MinGW Makefiles"

    For Code::Blocks (requires CMake 2.6 or later):
        -G"CodeBlocks – Unix Makefiles"   or
        -G"CodeBlocks - MinGW Makefiles"

    For Eclipse (requires CMake 2.6 or later):
        -G"Eclipse CDT4 – Unix Makefiles"   or
        -G"Eclipse CDT4 – MinGW Makefiles"

An example cmake command:
    cmake –G"CodeBlocks – Unix Makefiles" –DCMAKE_INSTALL_PREFIX=/usr/local ..

In order to force CMake to perform every test again during the configuration 
process, delete CMakeCache.txt.

Use the console GUI named ccmake on Unix or the CMake GUI on Microsoft Windows 
to discover other available options.
