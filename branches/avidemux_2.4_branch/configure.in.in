dnl    This file is part of the KDE libraries/packages
dnl    Copyright (C) 2001 Stephan Kulow (coolo@kde.org)
dnl                       modified by Walter Tasin (tasin@kdevelop.org)
dnl                       for c++ console applications

dnl    This file is free software; you can redistribute it and/or
dnl    modify it under the terms of the GNU Library General Public
dnl    License as published by the Free Software Foundation; either
dnl    version 2 of the License, or (at your option) any later version.

dnl    This library is distributed in the hope that it will be useful,
dnl    but WITHOUT ANY WARRANTY; without even the implied warranty of
dnl    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
dnl    Library General Public License for more details.

dnl    You should have received a copy of the GNU Library General Public License
dnl    along with this library; see the file COPYING.LIB.  If not, write to
dnl    the Free Software Foundation, Inc., 59 Temple Place - Suite 330,
dnl    Boston, MA 02111-1307, USA.

# Original Author was Kalle@kde.org
# I lifted it in some mater. (Stephan Kulow)
# I used much code from Janos Farkas


AC_INIT(acinclude.m4) dnl a source file from your sub dir

dnl This is so we can use kde-common
dnl needed -- mean
AC_CONFIG_AUX_DIR(admin)

dnl This ksh/zsh feature conflicts with `cd blah ; pwd`
unset CDPATH

dnl Checking host/target/build systems, for make, install etc.
AC_CANONICAL_HOST

dnl Perform program name transformation
AC_ARG_PROGRAM
dnl Automake doc recommends to do this only here. (Janos)
AM_INIT_AUTOMAKE(avidemux,"2.4.0")
ADM_SUBVERSION="0"

if [[ -f .svn/entries ]]; then
	AC_PATH_PROG(SVNVERSION, svnversion, no)
	
	if test "$SVNVERSION" != "no" ; then
		rev=`svnversion . | sed 's/^.*://g' | sed 's/M$//g'`
		ADM_SUBVERSION="\"$rev\""
	fi
fi

dnl almost the same like KDE_SET_PEFIX but the path is /usr/local
unset CDPATH

dnl make /usr/local the default for the installation
AC_PREFIX_DEFAULT(/usr/local)

AM_PROG_AS

dnl Ranlib
AC_PROG_RANLIB
AC_PROG_CXX
AC_PROG_LIBTOOL

dnl without this order in this file, automake will be confused!
AM_CONFIG_HEADER(config.h)

dnl added to ease install in uncommon place
dnl it has to be done early else it breaks cross compile
CPPFLAGS="$USER_INCLUDES $CPPFLAGS"
CFLAGS="$USER_INCLUDES $CFLAGS"
CXXFLAGS="$USER_INCLUDES $CXXFLAGS"
# needed for make install
#inlined, AM_PROG_MKDIR_P, it is not present on some system (fedora)

if mkdir -p --version . >/dev/null 2>&1 && test ! -d ./--version; then
	# Keeping the `.' argument allows $(mkdir_p) to be used without
	# argument.  Indeed, we sometimes output rules like
	#   $(mkdir_p) $(somedir)
	# where $(somedir) is conditionally defined.
	# (`test -n '$(somedir)' && $(mkdir_p) $(somedir)' is a more
	# expensive solution, as it forces Make to start a sub-shell.)
	
	mkdir_p='mkdir -p -- .'
else
	# On NextStep and OpenStep, the `mkdir' command does not
	# recognize any option.  It will interpret all options as
	# directories to create, and then abort because `.' already
	# exists.
	
	for d in ./-p ./--version;
	do
		test -d $d && rmdir $d
	done
	
	# $(mkinstalldirs) is defined by Automake if mkinstalldirs exists.
	
	if test -f "$ac_aux_dir/mkinstalldirs"; then
		mkdir_p='$(mkinstalldirs)'
	else
		mkdir_p='$(install_sh) -d'
	fi
fi

AC_SUBST([mkdir_p])

# /AM_PROG_MKDIR_P
AC_PROG_INSTALL

dnl create only shared libtool-libraries
AC_ENABLE_SHARED(no)

dnl set the following to yes, if you want to create static
dnl libtool-libraries, too.
AC_ENABLE_STATIC(no)

dnl create a working libtool-script
dnl KDE_PROG_LIBTOOL
dnl KDE_CHECK_EXTRA_LIBS

all_libraries="$all_libraries $USER_LDFLAGS"
AC_SUBST(all_includes)
AC_SUBST(all_libraries)
dnl avoid po mess
AC_SUBST(AUTODIRS)
AC_SUBST(ADM_SUBVERSION)


dnl _________________ gettext _________________
AM_GNU_GETTEXT([external])
GETTEXT_PACKAGE=avidemux
AC_DEFINE_UNQUOTED([GETTEXT_PACKAGE], "$GETTEXT_PACKAGE", [gettext package name])
ADM_LOCALEDIR=${datadir}/locale
AC_SUBST(ADM_LOCALEDIR)

dnl _________________ GTK 2.x _________________
adm_gtk_enabled=yes

echo " -------------------  for GTK 2.x ------------------"
AC_PATH_PROG(PKG_CONFIG, pkg-config, no)
if test "$PKG_CONFIG" = "no" ; then
	echo "************ pkg-config IS MANDATORY ***************"
 	AC_MSG_ERROR([*** pkg-config not found ! ***])
	adm_gtk_enabled="no"
fi

dnl AC_PATH_PROG(PKG_CONFIG,pkg-config, AC_MSG_ERROR([*** pkg-config not found ! ***]))

GTK_VERSION=`$PKG_CONFIG  gtk+-2.0 --modversion`
GLIB_VERSION=`$PKG_CONFIG  glib-2.0 --modversion`

if test "x$GTK_VERSION" = "x" ; then
	echo "************ Cannot identify gtk2 version ***************"
	AC_MSG_WARN([*** pkg-config installed incorrectly or gtk2-dev absent ! ***])
	adm_gtk_enabled="no"
fi

if test "x$GLIB_VERSION" = "x" ; then
	echo "************ Cannot identify glib-2.0 version ***************"
	AC_MSG_WARN([*** pkg-config installed incorrectly or glib2-dev absent ! ***])
	adm_gtk_enabled="no"
fi

VEROK=`echo "$GTK_VERSION" | perl -ne '@a=split(/\./,$_);
	if( $a[[0]] > 2 or ($a[[0]] == 2 and $a[[1]] >= 6) ){
		print "OK";
	} else {
		print "FAILED";
	}'`
                 
if test "x$VEROK" != "xOK" ; then
	AC_MSG_WARN([*** need gtk+ v2.6 or greater ! ***])
	adm_gtk_enabled="no"
fi

GTK_LIBS=`$PKG_CONFIG  gtk+-2.0 --libs`
GLIB_LIBS=`$PKG_CONFIG  glib-2.0 --libs`
GTHREAD_LIBS=`$PKG_CONFIG  gthread-2.0  --libs`

GTK_LIBS="$GTK_LIBS  $GTHREAD_LIBS"
GTK_CFLAGS=`$PKG_CONFIG  gtk+-2.0 --cflags`
GLIB_CFLAGS=`$PKG_CONFIG  glib-2.0 --cflags`  

AC_SUBST(GLIB_LIBS)
AC_SUBST(GLIB_CFLAGS)

AC_SUBST(GTK_CFLAGS)
AC_SUBST(GTK_LIBS)
AC_SUBST(GTK_VERSION)

dnl _________________ QT 4.x __________________
adm_qt4_enabled=yes

echo " ------------------- Probing for QT 4.x ------------------"
QTDIR=xxx

QTPOSTFIX="-qt4"
QTEXTRAINC="/usr/include/qt4"
QTEXTRALIB="/usr/lib/qt4"

AC_ARG_WITH([qt-dir],
	AC_HELP_STRING([--with-qt-dir=/path/to/Qt-4.x.0], 
		[to specify the path to the Qt-4.x.0 directory.]),
	[QTPATHS="$withval"],
	[QTPATHS="/usr/local/Trolltech/Qt-4.1.0 /c/Qt/4.1.0"])
	
AC_ARG_WITH([qt-include],
	AC_HELP_STRING([--with-qt-include=/path/to/Qt-4.x include],
		[to specify the path to the Qt-4. include directory]),
	[QTEXTRAINC="$withval"],
	[QTEXTRAINC="/usr/include/qt4"])
	
for x in $QTPATHS; do
    if test -d $x ; then
       QTDIR="$x"
    fi
done

AC_MSG_CHECKING(QT4.2 directory)

if test $QTDIR = xxx ; then
   AC_MSG_WARN(Could not locate QT 4.x)
   adm_qt4_enabled="no"
fi

AC_MSG_RESULT($QTDIR)
AC_MSG_CHECKING(QT4.x lib)

AC_ARG_WITH([qt-lib],
	AC_HELP_STRING([--with-qt-lib=/path/to/Qt-4.x lib],
		[to specify the path to the Qt-4. lib directory]),
	[QTEXTRALIB="$withval"],
	[QTEXTRALIB="$QTDIR/lib"])

AC_MSG_RESULT($QTEXTRALIB)

host=`uname -a` # AC_CANONICAL_HOST is broken at the time of this writing.
case $host in
  MINGW32*)
    AC_MSG_NOTICE(MinGW detected.)
    QTLIBS="-L$QTEXTRALIB -lopengl32 -lglu32 -lgdi32 -luser32 -lmingw32 -lqtmain -lQtOpenGL4 -lQtGui4 -lQtCore4 -mthreads -Wl,-enable-stdcall-fixup -Wl,-enable-auto-import -Wl,-enable-runtime-pseudo-reloc -Wl,-subsystem,windows"
    QTINC="-I$QTDIR/include -I$QTDIR/include/QtCore -I$QTDIR/include/QtGui -I$QTDIR/include/QtOpenGL -DUNICODE -DQT_LARGEFILE_SUPPORT -DQT_DLL -DQT_NO_DEBUG -DQT_OPENGL_LIB -DQT_GUI_LIB -DQT_CORE_LIB -DQT_THREAD_SUPPORT -DQT_NEEDS_QMAIN -frtti -fexceptions -I$QTEXTRAINC"
    QTBIN="$QTDIR/bin"
	QTPOSTFIX=""
    ;;
  *)
    AC_MSG_NOTICE(I'm assuming this is Linux)
    AC_PATH_XTRA
    QTLIBS="-Wl,-rpath,$QTEXTRALIB -L$QTEXTRALIB -lQtGui  -lQtCore $X_LIBS -lX11 -lXext -lXmu -lXt -lXi $X_EXTRA_LIBS  -lpthread"
    QTINC="-I$QTEXTRAINC -I$QTEXTRAINC/QtGui -I$QTEXTRAINC/QtCore -I$QTEXTRAINC/QtOpenGL $X_CFLAGS -DQT_OPENGL_LIB -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED -I$QTEXTRAINC"
    QTBIN="$QTDIR/bin"
    ;;
esac

AC_MSG_CHECKING(QT4.x include)
AC_MSG_RESULT($QTINC $QTEXTRAINC)

ADM_QTLIBS="$QTLIBS"
ADM_QTINCLUDES="$QTINC"
ADM_QTCFLAGS="$QTINC"

MOC="$QTBIN/moc$QTPOSTFIX"
UIC="$QTBIN/uic$QTPOSTFIX"
RCC="$QTBIN/rcc"
AC_SUBST(MOC)
AC_SUBST(UIC)
AC_SUBST(RCC)

# Now we check whether we can actually build a Qt app.
cat > myqt.h << EOF
	#include <QObject>

	class Test : public QObject
	{
		Q_OBJECT
		
		public:
			Test() {}
			~Test() {}
			
		public slots:
			void receive() {}
			
		signals:
			void send();
	};
EOF

cat > myqt.cpp << EOF
	#include "myqt.h"
	#include <QApplication>

	int main( int argc, char **argv )
	{
		QApplication app( argc, argv );
		Test t;
		QObject::connect( &t, SIGNAL(send()), &t, SLOT(receive()) );
	}
EOF

AC_MSG_CHECKING(does moc work?)
bnv_try_1="$MOC myqt.h -o moc_myqt.cpp"
AC_TRY_EVAL(bnv_try_1)

if test x"$ac_status" != x0; then
	AC_MSG_WARN(moc doesn't work)
	adm_qt4_enabled="no"
fi

AC_MSG_RESULT(yes)
AC_MSG_CHECKING(can I compile moc_myqt.cpp?)
bnv_try_2="$CXX -c $CXXFLAGS $ADM_QTINCLUDES $ADM_QTCFLAGS -o moc_myqt.o moc_myqt.cpp"
AC_TRY_EVAL(bnv_try_2)

if test x"$ac_status" != x0; then
	AC_MSG_WARN(couldn't compile moc_myqt.cpp)
	adm_qt4_enabled="no"
fi

AC_MSG_RESULT(yes)
AC_MSG_CHECKING(can I compile myqt.cpp?)
bnv_try_3="$CXX $QTINC -c $CXXFLAGS $ADM_QTINCLUDES $ADM_QTCFLAGS -o myqt.o myqt.cpp"
AC_TRY_EVAL(bnv_try_3)

if test x"$ac_status" != x0; then
	AC_MSG_WARN(couldn't compile myqt.cpp)
	adm_qt4_enabled="no"
fi

AC_MSG_RESULT(yes)
AC_MSG_CHECKING(can I link against QT?)
nv_try_4="$CXX $LIBS $ADM_QTLIBS -o myqt myqt.o moc_myqt.o"
AC_TRY_EVAL(bnv_try_4)

if test x"$ac_status" != x0; then
	AC_MSG_WARN(couldn't link)
	adm_qt4_enabled="no"
fi

AC_MSG_RESULT(yes)
AC_MSG_CHECKING(for mkoctfile)
AC_TRY_EVAL(mkoctfile)

if test x"$ac_status" != x0; then
	AC_MSG_WARN(mkoctfile is not in the path)
	adm_qt4_enabled="no"
fi

AC_MSG_RESULT(yes)
rm -f moc_myqt.cpp myqt.h myqt.cpp myqt.o myqt moc_myqt.o

echo " ------------------- End of UI probe ------------------"
    
AC_SUBST(ADM_QTLIBS)
AC_SUBST(ADM_QTINCLUDES)
AC_SUBST(ADM_QTCFLAGS)

dnl __________ Initialise Variables ___________
AM_CONDITIONAL(ADM_UI_GTK,  test "x$adm_gtk_enabled" = "xyes" )
AM_CONDITIONAL(ADM_UI_NONE, test "xnone" = "xnone" )
AM_CONDITIONAL(ADM_UI_QT4,  test "x$adm_qt4_enabled" = "xyes" )

AC_SUBST(AS)
AC_SUBST(ASFLAGS)
AC_SUBST(CCAS)
AC_SUBST(CCASFLAGS)

AC_DEFINE(USE_FFMPEG,1,[FFmpeg])
AC_DEFINE(USE_MJPEG,1,[MJPEG])
AC_DEFINE(CONFIG_DVVIDEO_ENCODER,1,[DV encoder])

have_alsa=yes
have_little_endian=yes
have_vorbis=yes
have_xvid=no
have_xx_xvid=yes
have_xvid4=yes
have_xml2=yes
have_bsd=no
have_altivec=no
have_malloc=no
have_darwin=no
have_amd64=no
have_ppc=no
have_x264=yes
have_aften=yes
have_libamrnb=yes

dnl ____________ Cygwin / MinGW ? _____________
use_cygwin=no
AC_MSG_CHECKING(Win32 host)

AC_TRY_COMPILE([
	#if !defined(__CYGWIN__) && !defined(__MINGW32__)
		#error
	#endif
],
	int z=0
,[
	use_cygwin=yes
])

AC_MSG_RESULT($use_cygwin)
AM_CONDITIONAL(HAVE_CYGWIN, test "x$use_cygwin" = "xyes")

if test "x$use_cygwin" = "xyes"; then
	AC_DEFINE(MEMALIGN_HACK,1,"SSE on Cywin")
	AC_DEFINE(CYG_MANGLING,1,"Name mangling")
	AC_DEFINE(rindex,ADM_rindex,"rindex does not exist on Cygwin")
	AC_DEFINE(index,ADM_index,"rindex does not exist on Cygwin")
	AC_DEFINE(fseeko,fseeko_adm,"")
	AC_DEFINE(ftello,ftello_adm,"")
	CXXFLAGS="$CXXFLAGS -mno-cygwin -mms-bitfields"
	CFLAGS="$CFLAGS -mno-cygwin -mms-bitfields"	
fi

dnl _______________ gettimeofday ______________
AC_CHECK_FUNCS(gettimeofday, AC_DEFINE(HAVE_GETTIMEOFDAY,1,"[Use native gettimeofday function]"))

dnl ______________ Multithreading _____________
dnl required for x264 and mplex

if test "x$use_cygwin" = "xyes"; then
	LIBS="$LIBS -lpthreadGC2 -Wl,-s"
else
	LDFLAGS="$LDFLAGS -lpthread -lX11 -lXext -L/usr/X11R6/lib"
fi

dnl _______________ Late Binding ______________
AC_ARG_ENABLE([late-binding],
	[AC_HELP_STRING([--enable-late-binding], [enable late binding of selected libraries [default=no]])],
	[use_late_binding=${enableval}], [use_late_binding=no])

if test "x$use_late_binding" = "xyes"; then
	AC_DEFINE(USE_LATE_BINDING, 1, "[use late binding of selected libraries]")
fi

dnl _________________ malloc.h ________________
AC_CHECK_HEADERS(malloc.h,have_malloc_h=yes)
AC_CHECK_HEADERS(malloc/malloc.h,have_malloc_h=yes)

if test "x$have_malloc_h" = "xyes"; then
	CPPFLAGS="$CPPFLAGS -I/usr/include/malloc"
	AC_DEFINE(HAVE_MALLOC_H,1,[Use malloc.h])	
fi

dnl _________________ Libxml2 _________________
AC_PATH_PROG(XML_CONFIG, xml2-config, no)

if test "$XML_CONFIG" = "no" ; then
 	XML_LIBS=""
	XML_CFLAGS=""
	
	if test "x$use_cygwin" = "xno"; then
		have_xml2=no
	fi
fi

if test "x$have_xml2" = "xyes"; then
	if test "$XML_CONFIG" = "no" ; then
		XML_LIBS="-L${libdir} -llibxml2 -lz -liconv -lws2_32"
		XML_CFLAGS="-I${includedir}/libxml2"
 	else
		XML_CFLAGS=`$XML_CONFIG  --cflags`
		XML_LIBS=`$XML_CONFIG  --libs`
	fi

	old_flags=$CPPFLAGS
	CPPFLAGS="$CPPFLAGS $XML_CFLAGS"

	AC_CHECK_HEADERS(libxml/parser.h,,have_xml2=no)
	
	if test "x$have_xml2" = "xyes"; then
		AC_DEFINE(USE_LIBXML2,1,[Libxml2 is available])		
	else
		AC_MSG_WARN(no valid parser.h header found for Libxml2)
	fi
fi

if test "x$have_xml2" = "xno"; then
	echo "************ LIBXML2 IS MANDATORY ************"
	echo "***** get it from http://www.xmlsoft.org *****"
	
	AC_MSG_ERROR([*** No Libxml2 found ***])
fi

AC_SUBST(XML_CFLAGS)
AC_SUBST(XML_LIBS)

dnl __________________ Aften __________________
AC_ARG_WITH([aften],
	[AC_HELP_STRING([--without-aften], [force compilation without Aften [default=test]])],
	[with_aften=${withval}], [with_aften=test])

AC_MSG_CHECKING([if Aften support is requested])
AC_MSG_RESULT($with_aften)

if test "x$with_aften" = "xno"; then
	have_aften=no
fi

if test "x$have_aften" = "xyes"; then
	AC_MSG_CHECKING([for Aften codec])
	AC_CHECK_HEADER(aften/aften.h,aften_header=aften/aften.h,have_aften=no)
	
	if test "x$have_aften" = "xno"; then
		have_aften=yes
		AC_CHECK_HEADER(aften.h,aften_header=aften.h,have_aften=no)		
	fi
fi

if test "x$have_aften" = "xyes"; then
	AC_LANG_PUSH(C++)
	AC_TRY_RUN([
		#include "$aften_header"

		int determineVersion(char *version)
		{
			if (version == "0.06") { return 6; } else { return 0; }
		}
		
		int determineVersion(double version)
		{
			if (version == 0.05) { return 5; } else { return 0; }
		}
		
		int main()
		{
			// AFTEN_VERSION is deprecated after v0.06 so if this compiles the version must be <= 0.06
			return determineVersion(AFTEN_VERSION);
		}
	])
	AC_LANG_POP()

	if test "x$ac_status" = "x5"; then
		aften_version="0.05"
		AC_DEFINE(USE_AFTEN_05, 1, [Use Aften 0.05 or earlier])
		AC_CHECK_LIB(aften,aften_encode_init,,have_aften=no,-lm)
	elif test "x$ac_status" = "x6"; then
		aften_version="0.06"
		AC_DEFINE(USE_AFTEN_06, 1, [Use Aften 0.06])
		AC_CHECK_LIB(aften,aften_encode_init,,have_aften=no,-lm)
	else
		AC_CHECK_LIB(aften,aften_get_version,,have_aften=no,-lm)
			
		if test "x$have_aften" = "xno"; then			
			aften_version="unsupported"
		else
			aften_version=">= 0.06"
		fi
	fi

	AC_MSG_CHECKING([version of Aften])	
	AC_MSG_RESULT($aften_version)
fi

if test "x$have_aften" = "xyes"; then
	AC_DEFINE(USE_AFTEN,1,[use Aften AC3 encoder])
fi

dnl ___________________ x264 __________________
AC_MSG_CHECKING(for x264 codec)
AC_CHECK_HEADER(x264.h,,have_x264=no)

if test "x$have_x264" = "xyes"; then
   AC_CHECK_LIB(x264,x264_encoder_open,,have_x264=no,-lm )
fi

if test "x$have_x264" = "xyes"; then
	AC_DEFINE(USE_X264,1,[use x264 encoder])
fi

dnl ________________ libamrnb _________________
AC_MSG_CHECKING(for libamrnb codec)
AC_CHECK_HEADER(amrnb/interf_dec.h,,have_libamrnb=no)

if test "x$have_libamrnb" = "xyes"; then
	if test "x$use_late_binding" = "xno"; then
		AC_CHECK_LIB(amrnb,GP3Decoder_Interface_Decode,,have_libamrnb=no,-lm)
	fi
fi

if test "x$have_libamrnb" = "xyes"; then
	AC_DEFINE(AMR_NB,1,[AMR_NB])
	AC_DEFINE(CONFIG_AMR_NB,1,[AMR_NB])
	AC_DEFINE(USE_AMR_NB,1,[Tell avidemux to use libamrnb])
else
	AC_MSG_WARN(libamr not found, you can download it there : ftp://ftp.penguin.cz/pub/users/utx/amr/)
fi

dnl _________________ Xvid 0.9 ________________
AC_MSG_CHECKING(for Xvid 0.9 codec)
AC_CHECK_HEADER(xvid.h,,have_xx_xvid=no)

dnl -- check API version 2.1 and not 2.0 --
cat >> conftest.$ac_ext <<EOF
	#include "xvid.h"

	int main()
	{
		#if API_VERSION != ((2<<16)+1)
			#error Xvid API Not 2.1
		#endif
		
		return 1;
	}
EOF

ac_compile='${CXX} -c $CXXFLAGS $all_includes $CPPFLAGS conftest.$ac_ext > /dev/null'
 
if AC_TRY_EVAL(ac_compile); then
	have_xx_xvid=yes
	AC_CHECK_LIB(xvidcore,xvid_encore,,have_xx_xvid=no,-lm)
else
	have_xx_xvid=no
fi

if test "x$have_xx_xvid" = "xyes"; then
	AC_DEFINE(USE_XX_XVID,1,[use Xvid 0.9 API])
	have_xvid=yes
	xvid_version="0.9"
fi

dnl _________________ Xvid 1.x ________________
AC_MSG_CHECKING(for Xvid 1.x codec)
AC_CHECK_HEADER(xvid.h,,have_xvid4=no)

dnl -- check API version 4.0 --
AC_TRY_COMPILE([
  	#include "xvid.h"
  	
	#if ( XVID_API == ((4<<16)+0)) || ( XVID_API == ((4<<16)+1))
		#error Xvid Api is 4.0 :)
	#endif
],
	int z=0
,[
	have_xvid4=no
])

AC_CHECK_LIB(xvidcore,xvid_encore,,have_xvid4=no,-lm)
 
if test "x$have_xvid4" = "xyes"; then 	
	AC_CHECK_LIB(xvidcore,xvid_encore,,have_xvid4=no,-lm)
	
	if test "x$have_xvid4" = "xyes"; then
		AC_DEFINE(USE_XVID_4,1,[use Xvid 1.x API])
		have_xvid=yes
		xvid_version="1.x"
	fi
fi

dnl __________________ libpng _________________
AC_MSG_CHECKING(for libpng)
have_png=yes
AC_CHECK_HEADER(png.h,,have_png=no)
AC_CHECK_LIB(png,png_malloc,,have_png=no)
 
if test "x$have_png" = "xyes"; then
	AC_DEFINE(USE_PNG,1,[libpng is available])
fi

dnl _______________ OS dep stuff ______________

dnl ------- lrintf --------
have_lrintf=no
AC_MSG_CHECKING(for lrintf in math.h)

AC_TRY_COMPILE([
	#include <math.h>
],[
	int arg = 0;
	arg=lrintf(0.5);
],[
	have_lrintf=yes
])

if test x$have_lrintf = xyes ; then
	AC_DEFINE(HAVE_LRINTF,1,[roundup function])
fi

AC_MSG_RESULT($have_lrintf)

dnl ------ fast int -------
have_fastint=no
AC_MSG_CHECKING(for fastint)

AC_TRY_COMPILE([
	#include <stdio.h>
	#include <stdint.h>
],[
	int arg = 0;
	int_fast16_t fst=0;
],[
	have_fastint=yes
])

if test x$have_fastint = xno ; then
	AC_DEFINE(EMULATE_FAST_INT,1,[roundup function])
fi

AC_MSG_RESULT($have_fastint)

dnl -- iconv needs const? --
have_consticonv=yes
AC_MSG_CHECKING(iconv needs const)

AC_TRY_COMPILE([
	#include <stdio.h>
	#include <stdlib.h>
	#include <iconv.h>
],[
	char *in,*out;
	size_t sin, sout, sz;
	iconv_t _conv;
	sin=1;
	sout=4;
 	sz=iconv(_conv,&in,&sin,&out,&sout);
],[
	have_consticonv=no
])

if test x$have_consticonv = xyes ; then
	AC_DEFINE(ICONV_NEED_CONST,1,[stricter prototyping])
fi

AC_MSG_RESULT($have_consticonv)

dnl ___________________ ESD ___________________
AC_ARG_WITH([esd],
	[AC_HELP_STRING([--without-esd], [force compilation without ESD [default=test]])],
	[with_esd=${withval}], [with_esd=test])

AC_MSG_CHECKING([if ESD support is requested])
AC_MSG_RESULT($with_esd)

have_esd=no

if test "x$with_esd" != "xno"; then
	AC_MSG_CHECKING(for ESD support)
	AC_TRY_COMPILE([
		#include <esd.h>
	],[
		int arg = ESD_BITS16;
	],[
		have_esd=yes
	])
	
	if test "x$have_esd" = "xyes"; then
		AC_CHECK_LIB(esd,esd_close,,have_esd=no,-lesd)
	fi
	
	AC_MSG_RESULT($have_esd)

	if test "x$have_esd" = "xyes"; then
		AC_DEFINE(USE_ESD,1,[ESD detected])
	fi
fi

dnl ___________________ OSS ___________________
AC_ARG_WITH([oss],
	[AC_HELP_STRING([--without-oss], [force compilation without OSS [default=test]])],
	[with_oss=${withval}], [with_oss=test])

AC_MSG_CHECKING([if OSS support is requested])
AC_MSG_RESULT($with_oss)

have_oss=no

if test "x$with_oss" != "xno"; then
	AC_MSG_CHECKING(for OSS support)
	AC_TRY_COMPILE([
		#ifdef __NetBSD__
			#include <sys/ioccom.h>
			#include <soundcard.h>
		#else
			#include <sys/soundcard.h>
		#endif
	],[
		int arg = SNDCTL_DSP_SETFRAGMENT;
	],[
		have_oss=yes
	])
	AC_MSG_RESULT($have_oss)

	if test "x$have_oss" = "xyes"; then
		AC_DEFINE(OSS_SUPPORT,1,[OSS detected])
	fi
fi

dnl ___________________ ALSA __________________
AC_MSG_CHECKING(for ALSA support)
AC_CHECK_HEADERS(alsa/asoundlib.h,,have_alsa=no)

if test "x$have_alsa" = "xyes"; then
	have_alsa=no

	dnl -- check version 0.9.x --
	AC_TRY_COMPILE([
		#include <alsa/asoundlib.h>
	],[
		#if SND_LIB_MAJOR!=0 || SND_LIB_MINOR!=9
			#error Not ALSA 0.9!
		#endif
		
		int arg = 0;
	],[
		have_alsa=yes
		have_alsa_1=no
	])

	dnl -- if it fails, try ALSA 1.0 --
	if test "x$have_alsa" = "xno"; then
		AC_TRY_COMPILE([
			#include <alsa/asoundlib.h>
		],[
			#if SND_LIB_MAJOR!=1 || SND_LIB_MINOR!=0
				#error Not ALSA 1.0!
			#endif
			
			int arg = 0;
		],[
			have_alsa=yes
			have_alsa_1=yes
		])
	fi
	
	AC_CHECK_LIB(asound,snd_pcm_hw_params_set_channels,,have_alsa=no,-lm)
fi

if test "x$have_alsa" = "xyes"; then				
	AC_DEFINE(ALSA_SUPPORT,1,"[use ALSA as possible audio device]")
fi

if test "x$have_alsa_1" = "xyes"; then				
	AC_DEFINE(ALSA_1_0_SUPPORT,1,"[ALSA is 1.0]")
fi

dnl ___________________ aRts __________________
AC_ARG_WITH([arts],
	[AC_HELP_STRING([--without-arts], [force compilation without aRts [default=test]])],
	[with_arts=${withval}], [with_arts=test])

AC_MSG_CHECKING([if aRts support is required])
AC_MSG_RESULT($with_arts)

have_arts=no
ARTS_CFLAGS=
ARTS_LIBS=

if test "x$with_arts" != "xno"; then
	AC_PATH_PROG(ART_CONFIG, artsc-config, no)
	if test "x$ART_CONFIG" != "xno"; then
		have_arts=yes

		ARTS_CFLAGS=$($ART_CONFIG --cflags)
		ARTS_LIBS=$($ART_CONFIG --libs)

		old_cppflags=$CPPFLAGS
		old_cflags=$CFLAGS

		CPPFLAGS="$CPPFLAGS $ARTS_CFLAGS"
		CFLAGS="$CFLAGS $ARTS_CFLAGS"

		AC_CHECK_HEADERS([artsc.h], , [have_arts=no])

		CPPFLAGS=$old_cppflags
		CFLAGS=$old_cflags
	fi

	if test "x$have_arts" = "xyes"; then
		AC_DEFINE(USE_ARTS, 1, "[aRts detected]")
	elif test "x$with_arts" = "xyes"; then
		AC_MSG_ERROR([aRts support requested but not found])
	fi
fi

AC_SUBST(ARTS_CFLAGS)
AC_SUBST(ARTS_LIBS)

dnl __________________ libdca _________________
AC_ARG_WITH([libdca],
	[AC_HELP_STRING([--without-libdca], [force compilation without libdca [default=test]])],
	[with_libdca=${withval}], [with_libdca=test])

AC_MSG_CHECKING([if libdca support is required])
AC_MSG_RESULT($with_libdca)

have_libdca=no

if test "x$with_libdca" != "xno"; then
    have_libdca=yes
    AC_CHECK_HEADERS([dts.h], , have_libdca=no)
    
    if test "x$have_libdca" = "xyes"; then
    	AC_CHECK_HEADERS([dts_internal.h], , have_libdca=no)
    	
    	if test "x$have_libdca" = "xyes"; then
    		if test "x$use_late_binding" = "xno"; then
				AC_CHECK_LIB(dts, dts_init, , have_libdca=no)
			fi
		else
    		AC_MSG_WARN(dts.h is there but I also need dts_internal.h to compile libdca/libdts. Please copy dts_internal.h where dts.h is)
    	fi
    fi
    
    if test "x$have_libdca" = "xyes"; then
		AC_DEFINE(USE_LIBDCA, 1, "[libdca detected]")
    elif test "x$with_libdca" = "xyes"; then
		AC_MSG_ERROR([libdca support requested but not found])
    fi
fi

dnl ___________________ MAD ___________________
AC_DEFINE(USE_MP3,1,[use libmad])

dnl __________________ FAAD2 __________________
AC_ARG_WITH([faad2],
	[AC_HELP_STRING([--without-faad2], [force compilation without FAAD2 [default=test]])],
 	[with_faad2=${withval}], [with_faad2=test])
 	
AC_ARG_WITH([newfaad],
 	AC_HELP_STRING([--with-newfaad], [use Gentoo hacked faad2.h]),
 	[newfaad=${withval}], [newfaad=no])
 
AC_MSG_CHECKING([if FAAD2 support is required])
AC_MSG_RESULT($with_faad2)
 
have_faad=no
 
if test "x$with_faad2" != "xno"; then
 	have_faad=yes
 	AC_CHECK_HEADERS([faad.h], , have_faad=no)
 	
 	if test "x$have_faad" = "xyes"; then
 		AC_CHECK_LIB( faad, faacDecInit, , have_faad=no )
 		
 		if test "x$have_faad" = "xno"; then
			have_faad=yes
 			AC_CHECK_LIB( faad, NeAACDecInit, , have_faad=no )
		fi
		
 		if test "x$have_faad" = "xyes"; then
			AC_DEFINE(USE_FAAD, 1, [FAAD2 detected])
 		elif test "x$with_faad2" = "xyes"; then
 			AC_MSG_ERROR([FAAD2 support requested but not found])
 		fi
 
 		if test "x$newfaad" = "xno"; then
 			AC_DEFINE(OLD_FAAD_PROTO, 1, [use classing FAAD support])
 		fi
	fi
 fi

dnl ___________________ FAAC __________________
AC_ARG_WITH([faac],
	[AC_HELP_STRING([--without-faac], [force compilation without FAAC [default=test]])],
 	[have_faac=${withval}], [have_faac=test])

AC_MSG_CHECKING([if FAAC support is required]) 
AC_MSG_RESULT($have_faac)
 	
if test "x$have_faac" != "xno"; then
	have_faac=yes
	AC_CHECK_HEADERS(faac.h,,have_faac=no)
	
	if test "x$have_faad" = "xyes"; then
		AC_CHECK_LIB( faac,faacEncClose,,have_faac=no, -lm )
	fi
	
	if test "x$have_faac" = "xyes"; then
		AC_DEFINE(USE_FAAC,1,"[Use faac audio enccoder]")
	fi  
fi

dnl __________________ liba52 _________________
AC_DEFINE(USE_AC3,1,[use liba52])

dnl __________________ Vorbis _________________
AC_CHECK_LIB(vorbis,vorbis_info_init,,have_vorbis=no, -lm)

if test "x$have_vorbis" = "xyes"; then
	AC_CHECK_LIB(vorbisenc,vorbis_encode_init,,have_vorbis=no, -lm)
	
	if test "x$have_vorbis" = "xyes"; then
		AC_CHECK_LIB(vorbis,vorbis_synthesis_restart,,have_vorbis=no, -lm)
		
		if test "x$have_vorbis" = "xyes"; then
			AC_DEFINE(USE_VORBIS,1,[Vorbis detected])
		fi
	fi
fi

dnl ___________________ LAME __________________
AC_ARG_WITH([lame],
	[AC_HELP_STRING([--without-lame], [force compilation without LAME [default=test]])],
 	[with_lame=${withval}], [with_lame=test])
 
AC_MSG_CHECKING([if LAME support is required])
AC_MSG_RESULT($with_lame)
 
have_lame=no
 
if test "x$with_lame" != "xno"; then
	have_lame=yes
	AC_CHECK_HEADERS(lame/lame.h, , have_lame=no)
	AC_CHECK_LIB(mp3lame, lame_init, , have_lame=no, -lm)

	if test "x$with_lame" = "xyes" && test "x$have_lame" = "xno"; then
		AC_MSG_ERROR([LAME support requested but not found])
	fi
fi

dnl ________________ FreeType 2 _______________
AC_ARG_WITH([freetype2],
	[AC_HELP_STRING([--without-freetype2], [force compilation without FreeType 2 [default=test]])],
	[with_freetype2=${withval}], [with_freetype2=test])

AC_MSG_CHECKING([if FreeType 2 support is required])
AC_MSG_RESULT($with_freetype2)

have_freetype=no

if test "x$with_freetype2" != "xno"; then
	PKG_CHECK_MODULES(FREETYPE, freetype2, have_freetype=yes, [
		if test "x$with_freetype2" = "xyes"; then
			AC_MSG_ERROR([FreeType 2 support requested but not found])
		fi
	])

	if test "x$have_freetype" = "xyes"; then
		AC_DEFINE(USE_FREETYPE,1,"[FreeType2 detected]")
	fi
fi

AM_CONDITIONAL(HAVE_FREETYPE, test "x$have_freetype" = "xyes" )
AC_SUBST(FREETYPE_CFLAGS)
AC_SUBST(FREETYPE_LIBS)

dnl ________________ Fontconfig _______________
AC_ARG_WITH([fontconfig],
	[AC_HELP_STRING([--without-fontconfig], [force compilation without Fontconfig [default=test]])],
	[with_fontconfig=${withval}], [with_fontconfig=test])

AC_MSG_CHECKING([if Fontconfig support is required])
AC_MSG_RESULT($with_fontconfig)

have_fontconfig=no

if test "x$with_fontconfig" != "xno"; then
	have_fontconfig=yes
	AC_CHECK_HEADER(fontconfig/fontconfig.h,,have_fontconfig=no)
	
	if test "x$have_fontconfig" = "xyes"; then
		AC_CHECK_LIB(fontconfig,FcStrSetCreate,,have_fontconfig=no,-lm)
	fi
	
	if test "x$have_freetype" = "xyes"; then
		AC_DEFINE(USE_FONTCONFIG,1,"[FontConfig detected]")
		AC_DEFINE(HAVE_FONTCONFIG,1,"[FontConfig detected]")
	fi
fi

dnl __________________ XVideo _________________
have_xv=no

if test "x$use_cygwin" = "xyes"; then
	enable_xv="no";
else
	AC_ARG_WITH([xv],
		[AC_HELP_STRING([--without-xv], [force compilation without XVideo [default=test]])],
		[enable_xv=${enableval}], [enable_xv=test])

	AC_MSG_CHECKING([if XVideo support is required])
	AC_MSG_RESULT($enable_xv)	

	if test "x$enable_xv" != "xno"; then
		have_xv=yes

		AC_CHECK_HEADERS([sys/shm.h X11/extensions/XShm.h X11/extensions/Xvlib.h], , have_xv=no, [
			#include <stdio.h>
			#include <X11/Intrinsic.h>
		])
			
		if test "x$have_xv" = "xyes"; then
			AC_CHECK_LIB(Xv, XvShmPutImage, , have_xv=no, -L/usr/X11R6/lib -L/usr/X11R6/lib64  -lXext -lX11 -lm)
		fi

		if test "x$have_xv" = "xyes"; then
			AC_DEFINE(USE_XV,1,[XVideo detected])
		elif test "x$enable_xv" = "xyes"; then
			AC_MSG_ERROR([XVideo support requested but not found])
		fi
	fi
fi

dnl ___________________ SDL ___________________
AC_ARG_WITH([libsdl],
	[AC_HELP_STRING([--without-libsdl], [force compilation without SDL [default=test]])],
	[with_sdl=${withval}], [with_sdl=test])

AC_MSG_CHECKING([if SDL support is required])
AC_MSG_RESULT($with_sdl)

have_sdl=no
SDL_CFLAGS=
SDL_LIBS=

if test "x$with_sdl" != "xno"; then
	AC_PATH_PROG(SDL_CONFIG, sdl-config, "no")
	
	if test "$SDL_CONFIG" = "no" ; then
		SDL_LIBS=""
		SDL_CFLAGS=""
		have_sdl=no
	else
		SDL_CFLAGS=`$SDL_CONFIG  --cflags`
		SDL_LIBS=`$SDL_CONFIG  --libs`                  
		CPPFLAGS="$CPPFLAGS $SDL_CFLAGS"
		have_sdl=yes
	fi
	
	if test "x$have_sdl" = "xyes" ;  then
		AC_DEFINE(USE_SDL,1,[SDL detected])
	fi
fi

AC_SUBST(SDL_CFLAGS)
AC_SUBST(SDL_LIBS)

dnl ___________________ CPU ___________________
echo "Checking CPU/system type"
echo "CPU type: $host_cpu"

use_mmx=no

case $host_cpu in
	i386|i486|i586|i686)
		have_little_endian=yes;		
		AC_DEFINE(ARCH_X86,1,[post proc])		
		AC_DEFINE(HAVE_MMX,1,[post proc])       
		AC_DEFINE(FPM_INTEL,1,[Mad ])       
		AC_DEFINE(RUNTIME_CPUDETECT,1,"Let FFmpeg decide which is faster")		
		AC_DEFINE(ARCH_X86_32,1,"X86_32 assembly")
		use_mmx=yes
		echo "X86 is ON"
		;;
	x86_64|amd64)
		have_little_endian=yes;		
		AC_DEFINE(ARCH_X86_64,1,"X86_64 AMD64 assembly")
		AC_DEFINE(ARCH_64_BITS,1,"X86_64 AMD64 assembly")
		AC_DEFINE(HAVE_MMX,1,[post proc])
		AC_DEFINE(FPM_DEFAULT,1,[Mad ])
		AC_DEFINE(RUNTIME_CPUDETECT,1,"Let FFmpeg decide which is faster")
		use_mmx=yes
		have_amd64=yes                
		echo "AMD64"
		;;
	 ia64)
		have_little_endian=yes;
		AC_DEFINE(ARCH_64_BITS,1,"X86_64 AMD64 assembly")
		AC_DEFINE(FPM_DEFAULT,1,[Mad ])
		AC_DEFINE(RUNTIME_CPUDETECT,1,"Let FFmpeg decide which is faster")
		echo "IA64"
		;;
	sparc|sparc64)
		have_little_endian=no;
		LMPG_OPT="";
		AC_DEFINE(ADM_BIG_ENDIAN,1,[Big endian CPU - SPARC or PowerPC])
		AC_DEFINE(FPM_SPARC,1,[Mad ])
		AC_DEFINE(WORDS_BIGENDIAN,1,[Big endian CPU - SPARC or PowerPC])
		;;		
	sun4u)
		LDFLAGS="$LDFLAGS -lposix4";
		have_little_endian=no;
		AC_DEFINE(FPM_SPARC,1,[Mad ])
		LMPG_OPT="";
		AC_DEFINE(ADM_SPARC,1,[Sparc workstations])
		AC_DEFINE(ADM_BIG_ENDIAN,1,[Big endian CPU - SPARC or PowerPC])
		AC_DEFINE(WORDS_BIGENDIAN,1,[Big endian CPU - SPARC or PowerPC])
		;;
	ppc)
		have_little_endian=no;
		LMPG_OPT="";
		AC_DEFINE(FPM_PPC,1,[Mad ])       
		have_ppc=yes				
		dnl we assume to be on linux-ish system here
		AC_DEFINE(restrict,__restrict__,[roundup function])
		AC_DEFINE(ADM_BIG_ENDIAN,1,[Big endian CPU - SPARC or PowerPC])
		AC_DEFINE(ARCH_POWERPC,1,[Enable PowerPC optim])		
		AC_ARG_ENABLE(altivec, 
			AC_HELP_STRING([--enable-altivec], [enable AltiVec acceleration (PowerPC)]),
			have_altivec=yes)
		AC_DEFINE(WORDS_BIGENDIAN,1,[Big endian CPU - SPARC or PowerPC])
		;;
	*)
		adm_cpu=`uname -p`;
		
		case $adm_cpu in
			powerpc)
				echo "Power Macintosh (Darwin ??)"
				have_darwin=yes
				have_little_endian=no
				AC_DEFINE(FPM_PPC,1,[Mad ])       
				AC_DEFINE(ADM_BSD_FAMILY,1,[BSD OS specific ifdef])
				LMPG_OPT="";
				LDFLAGS="$LDFLAGS  \
					-framework CoreServices \
					-framework CoreAudio  \
					-framework AudioUnit"  
			
				AC_DEFINE(ADM_BIG_ENDIAN,1,[Big endian CPU - SPARC or PowerPC])
				AC_DEFINE(CONFIG_DARWIN,0,[Inform FFmpeg we are using Darwin Mac OS X])
				AC_DEFINE(WORDS_BIGENDIAN,1,[Big endian CPU - SPARC or PowerPC])
				AC_ARG_ENABLE(altivec, 
					AC_HELP_STRING([--enable-altivec], [enable AltiVec acceleration (PowerPC)]),
					have_altivec=yes)
				AC_DEFINE(ARCH_POWERPC,1,[Enable PowerPC optim])
				have_ppc=yes
				;;
			*)
				have_little_endian=no;
				LMPG_OPT="";

				AC_DEFINE(FPM_DEFAULT,1,[Mad ])       
				AC_DEFINE(ADM_BIG_ENDIAN,1,[Big endian CPU - SPARC or PowerPC])
				AC_DEFINE(WORDS_BIGENDIAN,1,[Big endian CPU - SPARC or PowerPC])
				;;
		esac
esac

ALTIVEC_SWITCH=''
AC_MSG_CHECKING(for AltiVec)
AC_MSG_RESULT($have_altivec)

if test "x$have_altivec" = "xyes"; then
	echo "AltiVec enabled";

	AC_DEFINE(HAVE_ALTIVEC,1,[Enable AltiVec by default])
	
	if test "x$have_darwin" = "xno"; then
		AC_DEFINE(HAVE_ALTIVEC_H,1,[Enable AltiVec by default])
		ALTIVEC_SWITCH='-mabi=altivec -maltivec'		
	else
		dnl we are using Mac OS X, deal with how they do stuff
		ALTIVEC_SWITCH='-mabi=altivec -maltivec -faltivec -force_cpusubtype_ALL'
	fi
	
	CFLAGS="$CFLAGS $ALTIVEC_SWITCH"
	CXXFLAGS="$CXXFLAGS $ALTIVEC_SWITCH"
	AC_DEFINE(ARCH_PPC,1,[AltiVec for libmpeg2])
	AC_DEFINE(USE_ALTIVEC,1,[AltiVec for mpeg2enc]) 
	AC_DEFINE(HAVE_ALTIVEC,1,[AltiVec for mpeg2enc]) 
fi

echo "CPU done"

AC_SUBST(LMPG_OPT)
AC_SUBST(ALTIVEC_SWITCH)

AM_CONDITIONAL(BUILD_MMX_COMPATIBLE, test "x$use_mmx" = "xyes" || test "x$have_amd64" = "xyes")
AM_CONDITIONAL(BUILD_DARWIN, test "x$have_darwin" = "xyes")
AM_CONDITIONAL(BUILD_PPC, test "x$have_ppc" = "xyes")
AM_CONDITIONAL(BUILD_ALTIVEC, test "x$have_altivec" = "xyes")
AM_CONDITIONAL(BUILD_A64, test "x$have_amd64" = "xyes")

dnl _________________ Vectors _________________
dnl for AltiVec mainly and a bit of 386 (fft)
dnl (except for AMD64 ? bug in Ubuntu ?)

if test "x$have_amd64" = "xno"; then
	use_builtin=no
	AC_MSG_CHECKING(Built-in vectors)

	AC_TRY_COMPILE([	
		#if __GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 2)
		#else
			#error no vector built-ins
		#endif
		],
			int z=0
		,[
			use_builtin=yes
		])

	AC_MSG_RESULT(use_builtin)
	
	if test "x$use_builtin" = "xyes"; then
		AC_DEFINE(HAVE_BUILTIN_VECTOR,1,[Enable AltiVec by default])
	fi
fi

dnl _________________ BSD OS __________________
AC_TRY_COMPILE([
  	#include <stdlib.h>

	#if !defined (__FreeBSD__) && !defined(__NetBSD__) && !defined(__OpenBSD__) && !defined(__APPLE__)
		#error
	#endif
],
	int z=0
,[
  	AC_DEFINE(ADM_BSD_FAMILY,1,[BSD OS specific ifdef])
	have_bsd=yes;
	echo "BSD type OS"
])

dnl ________ Debug, Profiling & Optims ________
AC_ARG_ENABLE([profile],
	[AC_HELP_STRING([--enable-profile], [enable profiling [default=no]])],
	[use_profile=${enableval}], [use_profile=no])

if test "x$use_profile" = "xyes"; then
	CXXFLAGS="$CXXFLAGS -pg"
	CFLAGS="$CFLAGS -pg"
	LDFLAGS="$LDFLAGS -pg"
fi

AC_ARG_ENABLE([debug],
	[AC_HELP_STRING([--enable-debug], [enable debug symbols [default=no]])],
	[use_debug=${enableval}], [use_debug=no])
 
if test "x$use_debug" = "xyes"; then
	AC_DEFINE(ADM_DEBUG,1,[be verbose])
	CXXFLAGS="$CXXFLAGS -O1 -g3"
	CFLAGS="$CFLAGS -O1 -g3"
else
	dnl -- built-in means gcc3, for gcc 2 we stick to -O2 --
	if test "x$use_builtin" = "xyes"; then
		CXXFLAGS="$CXXFLAGS -O3"
		CFLAGS="$CFLAGS -O3"
	else
		CXXFLAGS="$CXXFLAGS -O2"
		CFLAGS="$CFLAGS -O2"
	fi
fi

AC_ARG_WITH([gpt],
	[AC_HELP_STRING([--with-gpt], [use Google Performance Tools [default=no]])],
	[use_gpt=${withval}], [use_gpt=no])
 
if test "x$use_gpt" = "xyes"; then
	LDFLAGS="$LDFLAGS -lprofiler -ltcmalloc"	
fi

CFLAGS="$CFLAGS -falign-loops=16"
CXXFLAGS="$CXXFLAGS -falign-loops=16"
CXXFLAGS="$CXXFLAGS -I.. -I../ADM_lavutil -IADM_utilities -I../ADM_utilities  -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -I../.."

dnl ________________ lavcodec _________________
AC_DEFINE(CONFIG_WMV3_DECODER,1,[FFMPEG])
AC_DEFINE(CONFIG_VC1_DECODER,1,[FFMPEG])
AC_DEFINE(CONFIG_RISKY,1,[FFMPEG])
AC_DEFINE(CONFIG_ENCODERS,1,[FFMPEG])
AC_DEFINE(CONFIG_DECODERS,1,[FFMPEG])
AC_DEFINE(CONFIG_QDM2_DECODER,1,[FFMPEG])
AC_DEFINE(CONFIG_MPEGAUDIO_HP,1,[FFMPEG])

dnl bunch of new stuff
AC_DEFINE(CONFIG_SNOW_ENCODER,1,[CONFIG_SNOW_ENCODER])
AC_DEFINE(CONFIG_AC3_ENCODER,1,[CONFIG_AC3_ENCODER])
AC_DEFINE(CONFIG_MP2_ENCODER,1,[CONFIG_MP2_ENCODER])
AC_DEFINE(CONFIG_MPEG1VIDEO_ENCODER,1,[CONFIG_MPEG1VIDEO_ENCODER])
AC_DEFINE(CONFIG_MPEG2VIDEO_ENCODER,1,[CONFIG_MPEG2VIDEO_ENCODER])
AC_DEFINE(CONFIG_H263_ENCODER,1,[CONFIG_H263_ENCODER])
AC_DEFINE(CONFIG_H263P_ENCODER,1,[CONFIG_H263P_ENCODER])
AC_DEFINE(CONFIG_MPEG4_ENCODER,1,[CONFIG_MPEG4_ENCODER])
AC_DEFINE(CONFIG_MSMPEG4V3_ENCODER,1,[CONFIG_MSMPEG4V3_ENCODER])
AC_DEFINE(CONFIG_MJPEG_ENCODER,1,[CONFIG_MJPEG_ENCODER])
AC_DEFINE(CONFIG_HUFFYUV_ENCODER,1,[CONFIG_HUFFYUV_ENCODER])
AC_DEFINE(CONFIG_FFVHUFF_ENCODER,1,[CONFIG_FFVHUFF_ENCODER])
AC_DEFINE(CONFIG_FFV1_ENCODER,1,[CONFIG_FFV1_ENCODER])

dnl decoders
AC_DEFINE(CONFIG_SNOW_DECODER,1,[CONFIG_SNOW_DECODER])
AC_DEFINE(CONFIG_TSCC_DECODER,1,[CONFIG_MPEG1VIDEO_ENCODER])
AC_DEFINE(CONFIG_ZLIB,1,[CONFIG_MPEG1VIDEO_ENCODER])
AC_DEFINE(CONFIG_MPEG1VIDEO_DECODER,1,[CONFIG_MPEG1VIDEO_ENCODER])
AC_DEFINE(CONFIG_MPEG2VIDEO_DECODER,1,[CONFIG_MPEG2VIDEO_ENCODER])
AC_DEFINE(CONFIG_H263_DECODER,1,[CONFIG_H263_ENCODER])
AC_DEFINE(CONFIG_H263P_DECODER,1,[CONFIG_H263P_ENCODER])
AC_DEFINE(CONFIG_H264_DECODER,1,[CONFIG_H263P_ENCODER])
AC_DEFINE(CONFIG_MPEG4_DECODER,1,[CONFIG_MPEG4_ENCODER])
AC_DEFINE(CONFIG_MSMPEG4V3_DECODER,1,[CONFIG_MSMPEG4V3_ENCODER])
AC_DEFINE(CONFIG_MSMPEG4V2_DECODER,1,[CONFIG_MSMPEG4V3_ENCODER])
AC_DEFINE(CONFIG_MJPEG_DECODER,1,[CONFIG_MJPEG_ENCODER])
AC_DEFINE(CONFIG_HUFFYUV_DECODER,1,[CONFIG_HUFFYUV_ENCODER])
AC_DEFINE(CONFIG_FFVHUFF_DECODER,1,[CONFIG_FFVHUFF_ENCODER])
AC_DEFINE(CONFIG_FFV1_DECODER,1,[CONFIG_FFV1_ENCODER])
AC_DEFINE(CONFIG_CYUV_DECODER,1,[CONFIG_FFV1_ENCODER])
AC_DEFINE(CONFIG_SVQ3_DECODER,1,[CONFIG_FFV1_ENCODER])
AC_DEFINE(CONFIG_WMAV2_DECODER,1,[CONFIG_FFV1_ENCODER])
AC_DEFINE(CONFIG_DVVIDEO_DECODER,1,[CONFIG_FFV1_ENCODER])
AC_DEFINE(CONFIG_WMV2_DECODER,1,[CONFIG_FFV1_ENCODER])
AC_DEFINE(CONFIG_WMV1_DECODER,1,[CONFIG_FFV1_ENCODER])
AC_DEFINE(CONFIG_MUXERS,1,[CONFIG_MUXERS])
AC_DEFINE(CONFIG_TG2_MUXER,1,[CONFIG_MUXERS])
AC_DEFINE(CONFIG_TGP_MUXER,1,[CONFIG_MUXERS])
AC_DEFINE(CONFIG_PSP_MUXER,1,[CONFIG_MUXERS])
AC_DEFINE(CONFIG_MP4_MUXER,1,[CONFIG_MUXERS])
AC_DEFINE(CONFIG_MOV_MUXER,1,[CONFIG_MUXERS])
AC_DEFINE(HAVE_THREADS,1,[HAVE_THREADS])

dnl ________________ libmpeg2 _________________
AC_DEFINE(ACCEL_DETECT,1,[MPEG2DEC])

dnl _______________ Preferences _______________
echo "Generating prefs if needed...(srcdir: <$srcdir> pwd:<$PWD>)"

if test $srcdir/admin/prefs_gen.pl -nt $srcdir/avidemux/prefs.in; then
	touch $srcdir/avidemux/prefs.in
fi

if test $srcdir/avidemux/prefs.in -nt $srcdir/avidemux/prefs.h -o $srcdir/avidemux/prefs.in -nt $srcdir/avidemux/prefs.cpp; then
	echo "Regeneration preferences definitions"
	perl $srcdir/admin/prefs_gen.pl $srcdir/avidemux
fi

dnl _______________ GCC 2.9x.x ________________
if { echo '#if __GNUC__ == 2 && __GNUC_MINOR__ >= 95'
	echo ' yes '
	echo '#endif'; } | ${CC} -E - | grep yes > /dev/null; then
		AC_DEFINE(GCC_2_95_X,1,[Using GCC 2.9x.x])
fi

dnl ##AC_CONFIG_FILES(po/Makefile.in)
dnl ##AC_CONFIG_FILES(po/Makefile)

dnl --end of file --
