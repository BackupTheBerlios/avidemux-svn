MACRO (getFfmpegVersionFromHeader description headerFile definition ffmpegVersion)
	FILE(READ "${headerFile}" FFMPEG_H)
	STRING(REGEX MATCH "#define[ ]+${definition}[ ]+([0-9]+)" FFMPEG_H "${FFMPEG_H}")
	STRING(REGEX REPLACE ".*[ ]([0-9]+).*" "\\1" ${ffmpegVersion} "${FFMPEG_H}")
ENDMACRO (getFfmpegVersionFromHeader)

MACRO (extractFfmpegLibNames sourceArchive sourceArchiveDir tempDir)
	if (NOT VERBOSE)
		set(ffmpegExtractOutput OUTPUT_VARIABLE FFMPEG_EXTRACT_OUTPUT)
	endif (NOT VERBOSE)

	message(STATUS "Determining FFmpeg library versions")
	message(STATUS "***********************************")

	get_filename_component(sourceArchiveFileName "${sourceArchive}" NAME)

	file(MAKE_DIRECTORY "${tempDir}")
	execute_process(COMMAND ${CMAKE_COMMAND} -E copy "${sourceArchive}" "${tempDir}")
	
	execute_process(COMMAND ${TAR_EXECUTABLE} xvfj "${sourceArchiveFileName}" "${sourceArchiveDir}/libavcodec/version.h" WORKING_DIRECTORY "${tempDir}" ${ffmpegExtractOutput})
	execute_process(COMMAND ${TAR_EXECUTABLE} xvfj "${sourceArchiveFileName}" "${sourceArchiveDir}/libavformat/version.h" WORKING_DIRECTORY "${tempDir}" ${ffmpegExtractOutput})
	execute_process(COMMAND ${TAR_EXECUTABLE} xvfj "${sourceArchiveFileName}" "${sourceArchiveDir}/libavutil/version.h" WORKING_DIRECTORY "${tempDir}" ${ffmpegExtractOutput})
	execute_process(COMMAND ${TAR_EXECUTABLE} xvfj "${sourceArchiveFileName}" "${sourceArchiveDir}/libpostproc/postprocess.h" WORKING_DIRECTORY "${tempDir}" ${ffmpegExtractOutput})
	execute_process(COMMAND ${TAR_EXECUTABLE} xvfj "${sourceArchiveFileName}" "${sourceArchiveDir}/libswscale/version.h" WORKING_DIRECTORY "${tempDir}" ${ffmpegExtractOutput})

	getFfmpegLibNames("${tempDir}/${sourceArchiveDir}")

	MESSAGE(STATUS "libavcodec version : ${LIBAVCODEC_VERSION}")
	MESSAGE(STATUS "libavformat version: ${LIBAVFORMAT_VERSION}")
	MESSAGE(STATUS "libavutil version  : ${LIBAVUTIL_VERSION}")
	MESSAGE(STATUS "libpostproc version: ${LIBPOSTPROC_VERSION}")
	MESSAGE(STATUS "libswscale version : ${LIBSWSCALE_VERSION}")
	message("")
ENDMACRO (extractFfmpegLibNames)

MACRO (getFfmpegLibNames sourceDir)
	getFfmpegVersionFromHeader("libavcodec" "${sourceDir}/libavcodec/version.h" LIBAVCODEC_VERSION_MAJOR LIBAVCODEC_VERSION)
	getFfmpegVersionFromHeader("libavformat" "${sourceDir}/libavformat/version.h" LIBAVFORMAT_VERSION_MAJOR LIBAVFORMAT_VERSION)
	getFfmpegVersionFromHeader("libavutil" "${sourceDir}/libavutil/version.h" LIBAVUTIL_VERSION_MAJOR LIBAVUTIL_VERSION)
	getFfmpegVersionFromHeader("libpostproc" "${sourceDir}/libpostproc/postprocess.h" LIBPOSTPROC_VERSION_MAJOR LIBPOSTPROC_VERSION)	
	getFfmpegVersionFromHeader("libswscale" "${sourceDir}/libswscale/version.h" LIBSWSCALE_VERSION_MAJOR LIBSWSCALE_VERSION)	
	
	if (UNIX)
		set(LIBAVCODEC_ADM ADM6)
	endif (UNIX)

	if (APPLE)
		set(LIBAVCODEC_IMPORT_LIB lib${LIBAVCODEC_ADM}avcodec.${LIBAVCODEC_VERSION}${CMAKE_SHARED_LIBRARY_SUFFIX})
		set(LIBAVFORMAT_IMPORT_LIB lib${LIBAVCODEC_ADM}avformat.${LIBAVFORMAT_VERSION}${CMAKE_SHARED_LIBRARY_SUFFIX})
		set(LIBAVUTIL_IMPORT_LIB lib${LIBAVCODEC_ADM}avutil.${LIBAVUTIL_VERSION}${CMAKE_SHARED_LIBRARY_SUFFIX})
		set(LIBPOSTPROC_IMPORT_LIB lib${LIBAVCODEC_ADM}postproc.${LIBPOSTPROC_VERSION}${CMAKE_SHARED_LIBRARY_SUFFIX})
		set(LIBSWSCALE_IMPORT_LIB lib${LIBAVCODEC_ADM}swscale.${LIBSWSCALE_VERSION}${CMAKE_SHARED_LIBRARY_SUFFIX})

		set(LIBAVCODEC_SHARED_LIB lib${LIBAVCODEC_ADM}avcodec.${LIBAVCODEC_VERSION}${CMAKE_SHARED_LIBRARY_SUFFIX})
		set(LIBAVFORMAT_SHARED_LIB lib${LIBAVCODEC_ADM}avformat.${LIBAVFORMAT_VERSION}${CMAKE_SHARED_LIBRARY_SUFFIX})
		set(LIBAVUTIL_SHARED_LIB lib${LIBAVCODEC_ADM}avutil.${LIBAVUTIL_VERSION}${CMAKE_SHARED_LIBRARY_SUFFIX})
		set(LIBPOSTPROC_SHARED_LIB lib${LIBAVCODEC_ADM}postproc.${LIBPOSTPROC_VERSION}${CMAKE_SHARED_LIBRARY_SUFFIX})
		set(LIBSWSCALE_SHARED_LIB lib${LIBAVCODEC_ADM}swscale.${LIBSWSCALE_VERSION}${CMAKE_SHARED_LIBRARY_SUFFIX})
	elseif (UNIX)
		set(LIBAVCODEC_IMPORT_LIB lib${LIBAVCODEC_ADM}avcodec${CMAKE_SHARED_LIBRARY_SUFFIX}.${LIBAVCODEC_VERSION})
		set(LIBAVFORMAT_IMPORT_LIB lib${LIBAVCODEC_ADM}avformat${CMAKE_SHARED_LIBRARY_SUFFIX}.${LIBAVFORMAT_VERSION})
		set(LIBAVUTIL_IMPORT_LIB lib${LIBAVCODEC_ADM}avutil${CMAKE_SHARED_LIBRARY_SUFFIX}.${LIBAVUTIL_VERSION})
		set(LIBPOSTPROC_IMPORT_LIB lib${LIBAVCODEC_ADM}postproc${CMAKE_SHARED_LIBRARY_SUFFIX}.${LIBPOSTPROC_VERSION})
		set(LIBSWSCALE_IMPORT_LIB lib${LIBAVCODEC_ADM}swscale${CMAKE_SHARED_LIBRARY_SUFFIX}.${LIBSWSCALE_VERSION})

		set(LIBAVCODEC_SHARED_LIB lib${LIBAVCODEC_ADM}avcodec${CMAKE_SHARED_LIBRARY_SUFFIX}.${LIBAVCODEC_VERSION})
		set(LIBAVFORMAT_SHARED_LIB lib${LIBAVCODEC_ADM}avformat${CMAKE_SHARED_LIBRARY_SUFFIX}.${LIBAVFORMAT_VERSION})
		set(LIBAVUTIL_SHARED_LIB lib${LIBAVCODEC_ADM}avutil${CMAKE_SHARED_LIBRARY_SUFFIX}.${LIBAVUTIL_VERSION})
		set(LIBPOSTPROC_SHARED_LIB lib${LIBAVCODEC_ADM}postproc${CMAKE_SHARED_LIBRARY_SUFFIX}.${LIBPOSTPROC_VERSION})
		set(LIBSWSCALE_SHARED_LIB lib${LIBAVCODEC_ADM}swscale${CMAKE_SHARED_LIBRARY_SUFFIX}.${LIBSWSCALE_VERSION})
	elseif (MINGW)
		set(LIBAVCODEC_IMPORT_LIB lib${LIBAVCODEC_ADM}avcodec${CMAKE_IMPORT_LIBRARY_SUFFIX})
		set(LIBAVFORMAT_IMPORT_LIB lib${LIBAVCODEC_ADM}avformat${CMAKE_IMPORT_LIBRARY_SUFFIX})
		set(LIBAVUTIL_IMPORT_LIB lib${LIBAVCODEC_ADM}avutil${CMAKE_IMPORT_LIBRARY_SUFFIX})
		set(LIBPOSTPROC_IMPORT_LIB lib${LIBAVCODEC_ADM}postproc${CMAKE_IMPORT_LIBRARY_SUFFIX})
		set(LIBSWSCALE_IMPORT_LIB lib${LIBAVCODEC_ADM}swscale${CMAKE_IMPORT_LIBRARY_SUFFIX})

		set(LIBAVCODEC_SHARED_LIB ${LIBAVCODEC_ADM}avcodec-${LIBAVCODEC_VERSION}${CMAKE_SHARED_LIBRARY_SUFFIX})
		set(LIBAVFORMAT_SHARED_LIB ${LIBAVCODEC_ADM}avformat-${LIBAVFORMAT_VERSION}${CMAKE_SHARED_LIBRARY_SUFFIX})
		set(LIBAVUTIL_SHARED_LIB ${LIBAVCODEC_ADM}avutil-${LIBAVUTIL_VERSION}${CMAKE_SHARED_LIBRARY_SUFFIX})
		set(LIBPOSTPROC_SHARED_LIB ${LIBAVCODEC_ADM}postproc-${LIBPOSTPROC_VERSION}${CMAKE_SHARED_LIBRARY_SUFFIX})
		set(LIBSWSCALE_SHARED_LIB ${LIBAVCODEC_ADM}swscale-${LIBSWSCALE_VERSION}${CMAKE_SHARED_LIBRARY_SUFFIX})
	elseif (MSVC)
		set(LIBAVCODEC_IMPORT_LIB ${LIBAVCODEC_ADM}avcodec${CMAKE_IMPORT_LIBRARY_SUFFIX})
		set(LIBAVFORMAT_IMPORT_LIB ${LIBAVCODEC_ADM}avformat${CMAKE_IMPORT_LIBRARY_SUFFIX})
		set(LIBAVUTIL_IMPORT_LIB ${LIBAVCODEC_ADM}avutil${CMAKE_IMPORT_LIBRARY_SUFFIX})
		set(LIBPOSTPROC_IMPORT_LIB ${LIBAVCODEC_ADM}postproc${CMAKE_IMPORT_LIBRARY_SUFFIX})
		set(LIBSWSCALE_IMPORT_LIB ${LIBAVCODEC_ADM}swscale${CMAKE_IMPORT_LIBRARY_SUFFIX})

		set(LIBAVCODEC_SHARED_LIB ${LIBAVCODEC_ADM}avcodec-${LIBAVCODEC_VERSION}${CMAKE_SHARED_LIBRARY_SUFFIX})
		set(LIBAVFORMAT_SHARED_LIB ${LIBAVCODEC_ADM}avformat-${LIBAVFORMAT_VERSION}${CMAKE_SHARED_LIBRARY_SUFFIX})
		set(LIBAVUTIL_SHARED_LIB ${LIBAVCODEC_ADM}avutil-${LIBAVUTIL_VERSION}${CMAKE_SHARED_LIBRARY_SUFFIX})
		set(LIBPOSTPROC_SHARED_LIB ${LIBAVCODEC_ADM}postproc-${LIBPOSTPROC_VERSION}${CMAKE_SHARED_LIBRARY_SUFFIX})
		set(LIBSWSCALE_SHARED_LIB ${LIBAVCODEC_ADM}swscale-${LIBSWSCALE_VERSION}${CMAKE_SHARED_LIBRARY_SUFFIX})
	endif (APPLE)
ENDMACRO (getFfmpegLibNames)

MACRO (registerFFmpeg sourceDir binaryDir)
	getFfmpegLibNames("${sourceDir}")
	include_directories(${sourceDir})

	add_library(ADM_libswscale UNKNOWN IMPORTED)
	add_library(ADM_libpostproc UNKNOWN IMPORTED)
	add_library(ADM_libavutil UNKNOWN IMPORTED)
	add_library(ADM_libavcodec UNKNOWN IMPORTED)
	add_library(ADM_libavformat UNKNOWN IMPORTED)

	set_property(TARGET ADM_libswscale PROPERTY IMPORTED_LOCATION "${binaryDir}/${LIBSWSCALE_IMPORT_LIB}")
	set_property(TARGET ADM_libpostproc PROPERTY IMPORTED_LOCATION "${binaryDir}/${LIBPOSTPROC_IMPORT_LIB}")
	set_property(TARGET ADM_libavutil PROPERTY IMPORTED_LOCATION "${binaryDir}/${LIBAVUTIL_IMPORT_LIB}")
	set_property(TARGET ADM_libavcodec PROPERTY IMPORTED_LOCATION "${binaryDir}/${LIBAVCODEC_IMPORT_LIB}")
	set_property(TARGET ADM_libavformat PROPERTY IMPORTED_LOCATION "${binaryDir}/${LIBAVFORMAT_IMPORT_LIB}")
ENDMACRO (registerFFmpeg)